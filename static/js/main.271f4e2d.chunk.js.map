{"version":3,"sources":["Profile/ProfileHeader.tsx","Components/StatCard.tsx","Components/StatCardRow.tsx","Constants/Constants.ts","Components/DropdownMenu.tsx","Dashboard/DashboardChart.tsx","Constants/Endpoints.ts","Dashboard/DashboardChartStats.tsx","Views/Dashboard.tsx","Components/Header.tsx","Components/SubDashboardCard.tsx","Components/SubHeaderLine.tsx","Components/EmailTemplateCard.tsx","Components/SubDashboard.tsx","Components/Tag.tsx","Components/Tags.tsx","Views/FormResponseView.tsx","Views/Responses.tsx","Views/General.tsx","Views/Casework.tsx","Views/EngagementReports.tsx","Views/Settings.tsx","Views/Login.tsx","App.tsx","index.tsx"],"names":["ProfileHeader","className","height","width","cx","cy","r","stroke","stroke-width","fill","StatCard","props","title","stat","StatCardRow","statCards","cards","forEach","card","push","spaceEven","Casework","Responses","Purple","DropdownMenu","useState","showMenu","toggleMenu","onClick","chartView","src","view","Constants","setChartView","DashboardChart","AreaChart","data","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","dataKey","YAxis","CartesianGrid","vertical","Tooltip","Area","type","fillOpacity","Testbase","ResponsesTodayOnly","ResponsesActiveGeneral","ResponsesActiveCasework","ResponsesTags","Mailto","Tags","DashboardChartStats","total","setTotal","today","setToday","todayTrends","setTodayTrends","a","authToken","localStorage","getItem","fetch","Endpoints","method","headers","Headers","responseTotal","status","console","log","json","formsTotal","length","responseToday","formsToday","trendData","Map","form","hour","Date","createdAt","getHours","has","set","get","trendDataArray","i","index","responses","useEffect","getTotal","getTodayTrends","Dashboard","general","setGeneral","casework","setCasework","setTotalTopics","getGeneralResponses","response","responsesGeneral","getCaseworkResponses","responsesCasework","getTags","uniqueTags","Set","tag","add","size","Header","SubDashboardCard","name","changeViewFunc","value","SubHeaderLine","subHeaderValue","EmailTemplateCard","SubDashboard","emailTemplates","d","undefined","fullPageView","Tag","remove","wrapperRef","useRef","inputText","setInputText","inputShow","setInputShow","enterNewTag","e","preventDefault","addTag","handleClickOutside","current","contains","target","document","addEventListener","removeEventListener","tagList","values","removeTag","onSubmit","ref","placeholder","onChange","FormResponseView","isResolved","setIsResolved","tags","setTags","messageResponse","setMessageResponse","mailtoRequest","to","email","subject","body","jsonMailtoRequest","JSON","stringify","text","mailtoString","window","location","href","responseId","tagValue","tagJson","resolveResponse","patchActive","active","setSpecificView","clickCheckbox","headerTitle","header","subjecTitle","subjectTitle","onResponseView","setResponseView","responseData","setData","specificResponseData","setSpecificResponseData","getResponses","forms","formResponses","formResponse","t","toLocaleString","emailAddress","General","onSpecificView","specificViewTitle","setSpecificViewTitle","specificSubjectData","setSpecificSubjectData","subjectsResponsesData","setSubjectsResponsesData","subjectsInquiries","setSubjectsInquiries","summaryToday","setSummaryToday","summaryTotal","setSummaryTotal","summaryTopics","setSummaryTopics","subjectsMap","subjects","getList","newList","inquiries","Array","from","keys","key","subText","sort","b","getResponsesToday","responsesToday","getSubDashboardData","specificTopicsData","setSpecificTopicsData","topicsResponsesData","setTopicsResponsesData","topicsCases","setTopicsCases","topicsMap","topics","topic","cases","EngagementReports","engagementChartData","setEngagementChartData","topicCountsMap","count","BarChart","margin","top","right","left","bottom","Bar","Settings","Login","onSignup","setOnSignup","firstName","setFirstName","lastName","setLastName","setEmail","password","setPassword","confirmPassword","setConfirmPassword","attemptLogin","login","jsonLogin","alert","userLogin","attemptSignup","newUser","passwordConfirm","jsonNewUser","switchLoginSignup","isSignupView","autoComplete","required","App","auth","setAuth","path","setPath","useLocation","pathname","userLogout","removeItem","setItem","component","activeClassName","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.271f4e2d.chunk.js","sourcesContent":["import React from 'react';\nimport './ProfileHeader.css';\n\nexport function ProfileHeader() {\n    return (\n        <div className=\"profile-heading\">\n            <p className=\"profile-name\">Profile Name</p>\n            <svg height=\"100\" width=\"100\">\n                <circle cx=\"25\" cy=\"25\" r=\"24\" stroke=\"#DFE0EB\" stroke-width=\"1\" fill=\"white\" />\n            </svg>\n        </div>\n    );\n}","import './StatCard.css';\n\nexport type StatCardProps = {\n    title: string;\n    stat: number;\n};\n\nexport function StatCard(props: StatCardProps) {\n    return (\n        <div className=\"stat-card\">\n            <h1 className=\"stat-card-title\">{props.title}</h1>\n            <p className=\"stat-card-data\">{props.stat}</p>\n        </div>\n    );\n}","import { StatCard, StatCardProps } from './StatCard';\nimport './StatCardRow.css';\n\nexport type StatCardRowProps = {\n    cards: Array<StatCardProps>;\n    spaceEven: boolean;\n}\n\nexport function StatCardRow(props: StatCardRowProps) {\n    let statCards:any[] = [];\n    props.cards.forEach(card => statCards.push(<StatCard title={card.title} stat={card.stat}></StatCard>));\n\n    return(\n        props.spaceEven ? <div className=\"stat-cards-even\">\n            {statCards}\n        </div> :\n        <div className=\"stat-cards-between\">\n            {statCards}\n        </div>\n    );\n}","// navigation panel\nexport const Title = \"Civic QA\";\nexport const Dashboard = \"Dashboard\";\nexport const GeneralInquiries = \"General Inquiries\";\nexport const EngagementReports = \"Engagement Reports\";\nexport const Templates = \"Your Templates\";\nexport const ComposeEmail = \"Compose Email\";\nexport const Settings = \"Settings\";\nexport const Logout = \"Logout\";\n\n// stat cards\nexport const General = \"General\";\nexport const Casework = \"Casework\";\n\n// chart\nexport const ChartTitle = \"Today's trends\";\n\n// chart dropdown menu options\nexport const Responses = \"Form Responses\";\nexport const Topics = \"Topics\";\n\n// chart stat cards\nexport const Total = \"Total\";\nexport const Today = \"Today\";\n\n// colors\nexport const Purple = \"#9B51E0\";","import { useState, Dispatch, SetStateAction } from 'react';\nimport * as Constants from '../Constants/Constants';\nimport './DropdownMenu.css';\n\nexport type DropdownMenuProps = {\n    chartView: string;\n    setChartView: Dispatch<SetStateAction<string>>;\n};\n\n// add topics when there is time\n// <button onClick={() => SetChartViewAndToggleMenu(Constants.Topics)} className=\"dropdown-menu-btn\"><p className=\"dropdown-menu-btn-text\">{Constants.Topics}</p></button>\n\nexport function DropdownMenu(props: DropdownMenuProps) {\n    // dropdown menu state\n    const [showMenu, toggleMenu] = useState(false);\n\n    // set chart view and auto close menu\n    function SetChartViewAndToggleMenu(view: string) {\n        props.setChartView(view);\n        toggleMenu(showMenu => !showMenu);\n    }\n\n    return (\n        <div>\n            <button className=\"dropdown-menu-btn\" onClick={() => toggleMenu(showMenu => !showMenu)}>\n                <p className=\"dropdown-menu-btn-text\">{props.chartView}</p>\n                {showMenu ? <img className=\"dropdown-menu-arrow rotate-arrow\" src=\"./assets/icons/down-arrow.svg\" /> : <img className=\"dropdown-menu-arrow\" src=\"./assets/icons/down-arrow.svg\" />}\n            </button>\n            {showMenu ? \n                <div className=\"menu\">\n                    <button onClick={() => SetChartViewAndToggleMenu(Constants.Responses)} className=\"dropdown-menu-btn\"><p className=\"dropdown-menu-btn-text\">{Constants.Responses}</p></button>\n                </div> : <div />}\n        </div>\n    );\n}","import React from 'react';\nimport { AreaChart, Area, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\nimport * as Constants from '../Constants/Constants';\n\nexport type ChartData = {\n    index: number;\n    responses: number;\n}\n\nexport type DashboardChartProps = {\n    data: Array<ChartData>\n};\n\nexport function DashboardChart(props: DashboardChartProps) {\n    return (\n        <div>\n            <AreaChart width={800} height={450} data={props.data}>\n                <defs>\n                    <linearGradient id=\"purpleGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"0%\" stopColor={Constants.Purple} stopOpacity={0.5}/>\n                        <stop offset=\"100%\" stopColor={Constants.Purple} stopOpacity={0}/>\n                    </linearGradient>\n                </defs>\n                <XAxis dataKey=\"index\" />\n                <YAxis />\n                <CartesianGrid stroke=\"#eee\" vertical={false} />\n                <Tooltip />\n                <Area type=\"monotone\" dataKey=\"responses\" stroke={Constants.Purple} fillOpacity={1} fill=\"url(#purpleGradient)\" />\n            </AreaChart>\n        </div>\n    );\n}","export const Testbase = \"http://localhost/v0\";\nexport const Signup = \"/signup\";\nexport const Responses = \"/responses\";\nexport const ResponsesActiveOnly = \"activeOnly=true\";\nexport const ResponsesTodayOnly = \"todayOnly=true\";\nexport const ResponsesActiveGeneral = \"activeOnly=true&inquiryType=general\";\nexport const ResponsesActiveCasework = \"activeOnly=true&inquiryType=casework\";\nexport const ResponsesTags = \"/tags\";\nexport const Mailto = \"/mailto\";\nexport const Tags = \"/tags\";","import React, { useEffect, useState } from 'react';\nimport { DropdownMenu } from '../Components/DropdownMenu';\nimport { ChartData, DashboardChart } from '../Dashboard/DashboardChart';\nimport { StatCard } from '../Components/StatCard';\nimport * as Constants from '../Constants/Constants';\nimport * as Endpoints from '../Constants/Endpoints';\n\nexport function DashboardChartStats() {\n    const [total, setTotal] = useState(0);\n    const [today, setToday] = useState(0);\n    const [todayTrends, setTodayTrends] = useState<ChartData[]>([]);\n    const [chartView, setChartView] = useState(Constants.Responses);\n\n    async function getTotal() {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        const responseTotal = await fetch(Endpoints.Testbase + Endpoints.Responses, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": authToken\n            })\n        });\n        if (responseTotal.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const formsTotal = await responseTotal.json();\n        setTotal(formsTotal.length);\n    }\n\n    async function getTodayTrends() {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        const responseToday= await fetch(Endpoints.Testbase + Endpoints.Responses + \"?\" + Endpoints.ResponsesTodayOnly, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": authToken\n            })\n        });\n        if (responseToday.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const formsToday = await responseToday.json();\n        // map hour and form response counts\n        var trendData = new Map<number, number>();\n        formsToday.forEach(function(form: any) {\n            var date = new Date(form.createdAt);\n            var hour = date.getHours();\n            if (trendData.has(hour)) {\n                trendData.set(hour, (trendData.get(hour) || 0) + 1);\n            } else {\n                trendData.set(hour, 1);\n            }\n        });\n        // convert map to array for recharts line chart\n        var trendDataArray: Array<ChartData> = [];\n        for (var i = 0; i < 24; i++) {\n            trendDataArray.push({index: i, responses: trendData.get(i) || 0});\n        }\n        setTodayTrends(trendDataArray);\n        setToday(formsToday.length);\n    }\n\n    useEffect(() => {\n        getTotal();\n        getTodayTrends();\n    }, []);\n\n    return(\n        <div className=\"trends\">\n            <div className=\"chart-heading\">\n                <h2 className=\"chart-title\">{Constants.ChartTitle}</h2>\n                <div className=\"dropdown-menu\">\n                    <DropdownMenu chartView={chartView} setChartView={setChartView}></DropdownMenu>\n                </div>\n            </div>\n            <div className=\"chart-stats\">\n                <DashboardChart data={todayTrends}></DashboardChart>\n                <div className=\"chart-stats-cards\">\n                    <StatCard title={Constants.Total} stat={total}></StatCard>\n                    <StatCard title={Constants.Today} stat={today}></StatCard>\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { StatCardRow } from '../Components/StatCardRow';\nimport { DashboardChartStats } from '../Dashboard/DashboardChartStats';\nimport * as Constants from '../Constants/Constants';\nimport * as Endpoints from '../Constants/Endpoints';\nimport './Dashboard.css';\n\n// currently using dummy data for StatCards and LineChart\nexport function Dashboard() {\n    // stat cards data\n    const [general, setGeneral] = useState(0);\n    const [casework, setCasework] = useState(0);\n    const [totalTopics, setTotalTopics] = useState(0);\n\n\n    const getGeneralResponses = async() => {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        const response = await fetch(Endpoints.Testbase + Endpoints.Responses + \"?\" + Endpoints.ResponsesActiveGeneral, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": authToken\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const responsesGeneral = await response.json();\n        setGeneral(responsesGeneral.length);\n    }\n\n    const getCaseworkResponses = async() => {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        const response = await fetch(Endpoints.Testbase + Endpoints.Responses + \"?\" + Endpoints.ResponsesActiveCasework, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": authToken\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const responsesCasework = await response.json();\n        setCasework(responsesCasework.length);\n    }\n\n    const getTags = async() => {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        const response = await fetch(Endpoints.Testbase + Endpoints.Tags, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": authToken\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        let uniqueTags = new Set();\n        const tags = await response.json();\n        tags.forEach((tag: any) => {\n            uniqueTags.add(tag);\n        });\n        setTotalTopics(uniqueTags.size);\n    }\n    \n    useEffect(() => {\n        getGeneralResponses();\n        getCaseworkResponses();\n        getTags();\n    }, []);\n\n    let statCards = [\n        {title: Constants.General, stat: general},\n        {title: Constants.Casework, stat: casework}\n    ]\n\n    return (\n        <div className=\"dashboard\">\n            <StatCardRow spaceEven={true} cards={statCards}></StatCardRow>\n            <DashboardChartStats></DashboardChartStats>\n        </div>\n    );\n}","export type HeaderProps = {\n    title: string;\n}\n\nexport function Header(props: HeaderProps) {\n    return(\n        <div>\n            <h1 className=\"sub-dash-title\">{props.title}</h1>\n        </div>\n    );\n}","import { SubDashboardData } from '../Components/SubDashboard';\nimport './SubDashboardCard.css';\n\nexport type SubDashboardCardProps = {\n    data: SubDashboardData;\n    changeViewFunc: Function;\n}\n\nexport function SubDashboardCard(props: SubDashboardCardProps) {\n    return (\n        <div className=\"sub-dash-card\">\n            <p className=\"sub-dash-card-name\">{props.data.name}</p>\n            <button className=\"sub-dash-card-btn\" onClick={() => props.changeViewFunc(props.data)}>View</button>\n            <p className=\"sub-dash-card-value\">{props.data.value}</p>\n        </div>\n    );\n}","export type SubHeaderLineProps = {\n    title: string;\n    subHeaderValue?: any;\n}\n\nexport function SubHeaderLine(props: SubHeaderLineProps) {\n    return(\n        <div>\n            <div className=\"sub-dash-sub-header\">\n                <h2 className=\"sub-dash-sub-title\">{props.title}</h2>\n                {props.subHeaderValue ? <h1 className=\"sub-dash-sub-number\">{props.subHeaderValue}</h1> : null}\n                <hr className=\"sub-dash-line\" />\n            </div>\n        </div>\n    );\n}","import './EmailTemplateCard.css';\n\nexport type EmailTemplateCardProps = {\n    name: string;\n    value: number;\n}\n\nexport function EmailTemplateCard(props: EmailTemplateCardProps) {\n    return (\n        <div className=\"email-tmp-card\">\n            <p className=\"email-tmp-card-name\">{props.name}</p>\n            <button className=\"email-tmp-card-btn\">View</button>\n            <p className=\"email-tmp-card-value\">{props.value}</p>\n        </div>\n    );\n}","import { Dispatch, SetStateAction } from 'react';\nimport { SubDashboardCard } from './SubDashboardCard';\nimport { SubHeaderLine } from './SubHeaderLine';\nimport './SubDashboard.css';\nimport { EmailTemplateCard } from './EmailTemplateCard';\n\nexport type SubDashboardData = {\n    id?: string;\n    email?: string;\n    name: string;\n    value: any;\n    body?: string;\n}\n\nexport type SubDashboardProps = {\n    title: string;\n    data: Array<SubDashboardData>;\n    changeViewFunc: Function;\n    emailTemplates: boolean;\n    fullPageView: boolean;\n    subHeaderValue?: any;\n};\n\nexport function SubDashboard(props: SubDashboardProps) {\n    let cards:any[] = [];\n    if (props.emailTemplates) {\n        props.data.forEach(d => cards.push(<EmailTemplateCard name={d.name} value={d.value}></EmailTemplateCard>))\n    } else {\n        props.data.forEach(d => cards.push(<SubDashboardCard data={d} changeViewFunc={props.changeViewFunc}></SubDashboardCard>));\n    }\n\n    return (\n        <div>\n            <div>\n                <SubHeaderLine title={props.title} subHeaderValue={props.subHeaderValue ? props.subHeaderValue : undefined}></SubHeaderLine>\n                {props.fullPageView ? \n                <div className=\"sub-dash-cards-700\">\n                    {cards}\n                </div> :\n                <div className=\"sub-dash-cards-400\">\n                    {cards}\n                </div>\n                }\n\n            </div>\n        </div>\n    );\n}","import './Tag.css';\n\nexport type TagProps = {\n    value: string;\n    remove: Function;\n}\n\nexport function Tag(props: TagProps) {\n    return(\n        <div className=\"tag\">\n            <p className=\"tag-value\">{\"#\" + props.value}</p>\n            <button className=\"tag-remove-btn\" onClick={() => props.remove(props.value)}><img className=\"icon\" src=\"./assets/icons/remove.svg\"></img></button>\n        </div>\n    );\n}","import { useEffect, useRef, useState } from 'react';\nimport { Tag } from './Tag';\nimport './Tag.css';\n\nexport type TagProps = {\n    values: string[];\n    addTag: Function;\n    removeTag: Function;\n}\n\nexport function Tags(props: TagProps) {\n    const wrapperRef = useRef<HTMLInputElement>(null);\n    const [inputText, setInputText] = useState(\"\");\n    const [inputShow, setInputShow] = useState(false);\n\n    function addNewTag() {\n        if (inputText.length > 0) {\n            props.addTag(inputText);\n        }\n        setInputShow(false);\n        setInputText(\"\");\n    }\n\n    function enterNewTag(e: any) {\n        e.preventDefault();\n        addNewTag();\n    }  \n\n    function handleClickOutside(e: any) {\n        if (wrapperRef.current && !wrapperRef.current.contains(e.target)) {\n            setInputShow(false);\n        }\n    }\n\n    useEffect(() => {\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, []);\n\n    let tagList: any[] = [];\n    props.values.forEach(function(value) {\n        tagList.push(<Tag value={value} remove={props.removeTag}></Tag>)\n    });\n\n    return(\n        <div className=\"tags-container\">\n            {tagList}\n            {inputShow ? <div>\n                    <form onSubmit={e => enterNewTag(e)}>\n                        <input ref={wrapperRef} className=\"tag-add-input\" type=\"text\" placeholder={\"#\"} onChange={e => setInputText(e.target.value)}></input>\n                    </form>\n                </div>\n                : <button className=\"tag-add-btn\" onClick={() => setInputShow(true)}><img className=\"icon\" src=\"./assets/icons/plus.svg\"></img></button>}\n        </div>\n    );\n}","import { useEffect, useState } from 'react';\nimport { Header } from '../Components/Header';\nimport { SubHeaderLine } from '../Components/SubHeaderLine';\nimport { Tags } from '../Components/Tags';\nimport * as Endpoints from '../Constants/Endpoints';\nimport \"./FormResponseView.css\";\n\nexport type FormResponseViewProps = {\n    responseId: string;\n    email: string;\n    title: string;\n    subject: string;\n    body: string;\n    setSpecificView: Function;\n};\n\nexport function FormResponseView(props: FormResponseViewProps) {\n    const [isResolved, setIsResolved] = useState(true);\n    const [tags, setTags] = useState<any[]>([]);\n    const [messageResponse, setMessageResponse] = useState(\"\");\n\n    async function createMailto() {\n        var mailtoRequest = {to: [props.email], subject: props.subject, body: messageResponse};\n        var jsonMailtoRequest = JSON.stringify(mailtoRequest);\n        const response = await fetch(Endpoints.Testbase + Endpoints.Mailto, {\n            method: \"POST\",\n            body: jsonMailtoRequest,\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error creating mailto\");\n            return;\n        }\n        const mailtoString = await response.text();\n        window.location.href = mailtoString;\n    }\n\n    const getTags = async() => {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        const response = await fetch(Endpoints.Testbase + Endpoints.Responses + \"/\" + props.responseId + Endpoints.ResponsesTags, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": authToken\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retreiving response tags\");\n            return;\n        }\n        const tags = await response.json();\n        var tagList: any[] = [];\n        tags.forEach((tag: any) => {\n            tagList.push(tag.value);\n        });\n        setTags(tagList);\n    }\n\n    async function removeTag(tagValue: string) {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        var tagJson = JSON.stringify({value: tagValue});\n        const response = await fetch(Endpoints.Testbase + Endpoints.Responses + \"/\" + props.responseId + Endpoints.ResponsesTags, {\n            method: \"DELETE\",\n            body: tagJson,\n            headers: new Headers({\n                \"Authorization\": authToken,\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error creating tag\");\n            return;\n        }\n        getTags();\n    }\n\n    async function addTag(tagValue: string) {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        var tagJson = JSON.stringify({value: tagValue});\n        const response = await fetch(Endpoints.Testbase + Endpoints.Responses + \"/\" + props.responseId + Endpoints.ResponsesTags, {\n            method: \"POST\",\n            body: tagJson,\n            headers: new Headers({\n                \"Authorization\": authToken,\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error creating tag\");\n            return;\n        }\n        getTags();\n    }\n\n    const resolveResponse = async(id: string, isResolved: boolean) => {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        var patchActive = JSON.stringify({active: !isResolved});\n        const response = await fetch(Endpoints.Testbase + Endpoints.Responses + \"/\" + id, {\n            method: \"PATCH\",\n            body: patchActive,\n            headers: new Headers({\n                \"Authorization\": authToken\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error marking form response as resolved\");\n            return;\n        }\n    }\n\n    async function clickCheckbox() {\n        setIsResolved(isResolved => !isResolved);\n        resolveResponse(props.responseId, isResolved);\n    }\n\n    useEffect(() => {\n        getTags();\n    }, []);\n\n    return(\n        <div>\n            <button className=\"exit-button\" onClick={() => props.setSpecificView()}><img className=\"back-arrow\" src=\"./assets/icons/arrow.svg\"></img></button>\n            <Header title={props.title}></Header>\n            <SubHeaderLine title={props.subject}></SubHeaderLine>\n            <Tags addTag={addTag} removeTag={removeTag} values={tags}></Tags>\n            <div className=\"form-response-container\">\n                <div className=\"form-response\">\n                    <p className=\"form-response-body\">{props.body}</p>\n                    <textarea className=\"form-response-message\" value={messageResponse} onChange={e => setMessageResponse(e.target.value)}></textarea>\n                    <div className=\"resolved-send-container\">\n                        <label className=\"resolved-label\" >\n                            <input id=\"resolved-check-box\" className=\"resolved-check-box\" type=\"checkbox\" onClick={() => clickCheckbox()}></input>\n                            Resolved\n                        </label>\n                        <button className=\"send-btn\" placeholder=\"Message\" onClick={createMailto}>Send</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { Header } from '../Components/Header';\nimport { SubDashboard, SubDashboardData } from '../Components/SubDashboard';\nimport { FormResponseView } from './FormResponseView'; \nimport * as Endpoints from '../Constants/Endpoints';\n\nexport type ResponsesProps = {\n    header?: string;\n    subjectTitle?: string;\n    data: Array<SubDashboardData>;\n}\n\nexport function Responses(props: ResponsesProps) {\n    const headerTitle = props.header || \"Form Responses\";\n    const subjecTitle = props.subjectTitle || \"CURRENT RESPONSES\";\n    const [onResponseView, setResponseView] = useState(false);\n    const [responseData, setData] = useState<SubDashboardData[]>([]);\n    const [specificResponseData, setSpecificResponseData] = useState<SubDashboardData>();\n\n    const getResponses = async() => {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        const response = await fetch(Endpoints.Testbase + Endpoints.Responses + \"?\" + Endpoints.ResponsesActiveOnly, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": authToken\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const forms = await response.json();\n        var formResponses: Array<SubDashboardData> = [];\n        forms.forEach(function(formResponse: any) {\n            var d = new Date(formResponse.createdAt);\n            var t = d.toLocaleString(\"en-US\");\n            formResponses.push({id: formResponse.id, email: formResponse.emailAddress, name: formResponse.name + \" / \" + formResponse.subject, value: t, body: formResponse.body});\n        });\n        setData(formResponses);\n    }\n\n    useEffect(() => {\n        getResponses();\n    }, []);\n\n    function setSpecificResponseContent(formResponse: SubDashboardData) {\n        setResponseView(true);\n        setSpecificResponseData(formResponse);\n    }\n\n    function setSpecificView() {\n        setResponseView(false);\n        getResponses();\n    }\n    \n    return (\n        <div className=\"dashboard sub-dashboard\">\n            {onResponseView ? <FormResponseView responseId={specificResponseData?.id || \"\"} email={specificResponseData?.email || \"\"} title=\"Form Responses\" subject={specificResponseData?.name || \"\"} body={specificResponseData?.body || \"\"} setSpecificView={setSpecificView}></FormResponseView> :\n            <div>\n                <Header title={headerTitle}></Header>\n                <SubDashboard title={subjecTitle} data={props.data ? props.data : responseData} changeViewFunc={setSpecificResponseContent} emailTemplates={false} fullPageView={true} subHeaderValue={props.data ? props.data.length : responseData.length}></SubDashboard>\n            </div>}\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { Header } from '../Components/Header';\nimport { SubDashboard, SubDashboardData } from '../Components/SubDashboard';\nimport { SubHeaderLine } from '../Components/SubHeaderLine';\nimport { StatCardRow } from '../Components/StatCardRow';\nimport { Responses } from './Responses';\nimport * as Endpoints from '../Constants/Endpoints';\n\nexport function General() {\n    const [onSpecificView, setSpecificView] = useState(false);\n    const [specificViewTitle, setSpecificViewTitle] = useState(\"\");\n    const [specificSubjectData, setSpecificSubjectData] = useState<SubDashboardData[]>([]);\n    const [subjectsResponsesData, setSubjectsResponsesData] = useState<Map<string, SubDashboardData[]>>();\n    const [subjectsInquiries, setSubjectsInquiries] = useState<SubDashboardData[]>([]);\n    const [summaryToday, setSummaryToday] = useState(0);\n    const [summaryTotal, setSummaryTotal] = useState(0);\n    const [summaryTopics, setSummaryTopics] = useState(0);\n\n    const getResponses = async() => {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        const response = await fetch(Endpoints.Testbase + Endpoints.Responses + \"?\" + Endpoints.ResponsesActiveGeneral, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": authToken\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const responsesGeneral = await response.json();\n        var formResponses: SubDashboardData[] = [];\n        let subjectsMap = new Map<string, SubDashboardData[]>();\n        let subjectsInquiries = new Map<string, number>();\n\n        responsesGeneral.forEach(function(formResponse: any) {\n            var d = new Date(formResponse.createdAt);\n            var t = d.toLocaleString(\"en-US\");\n            var subjects = formResponse.tags;\n            var data: SubDashboardData = {id: formResponse.id, email: formResponse.emailAddress, name: formResponse.name + \" / \" + formResponse.subject, value: t, body: formResponse.body}\n\n            subjects.forEach((subject: any) => {\n                if (subjectsMap.has(subject.value)) {\n                    var getList = subjectsMap.get(subject.value);\n                    getList?.push(data);\n                    subjectsMap.set(subject.value, getList || []);\n                } else {\n                    var newList: SubDashboardData[] = [];\n                    newList.push(data);\n                    subjectsMap.set(subject.value, newList);\n                }\n\n                subjectsInquiries.set(subject.value, (subjectsInquiries.get(subject.value) || 0) + 1);\n\n            });\n            formResponses.push(data);\n        });\n\n        var inquiries: SubDashboardData[] = [];\n        Array.from(subjectsInquiries.keys()).forEach((key) => {\n            var subText = \" inquiry\";\n            if ((subjectsInquiries.get(key) || 0) > 1) {\n                subText = \" inquiries\";\n            }\n            inquiries.push({name: key, value: subjectsInquiries.get(key) + subText});\n        });\n\n        inquiries.sort((a, b) => (a.value > b.value) ? -1 : (a.value === b.value) ? -1 : 1);\n\n        setSummaryTopics(inquiries.length);\n        setSummaryTotal(formResponses.length);\n        setSubjectsInquiries(inquiries);\n        setSubjectsResponsesData(subjectsMap);\n    }\n\n    const getResponsesToday = async() => {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        const response = await fetch(Endpoints.Testbase + Endpoints.Responses + \"?\" + Endpoints.ResponsesActiveGeneral + \"&\" + Endpoints.ResponsesTodayOnly, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": authToken\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const responsesToday = await response.json();\n        setSummaryToday(responsesToday.length);\n    }\n\n    function specificView(data: SubDashboardData) {\n        setSpecificViewTitle(data.name);\n        setSpecificSubjectData(subjectsResponsesData?.get(data.name) || []);\n        setSpecificView(true);\n    }\n\n    function initialView() {\n        setSpecificView(false);\n    }\n    \n    useEffect(() => {\n        getResponses();\n        getResponsesToday();\n    }, []);\n\n\n    let statCards = [\n        {title: \"New Today\", stat: summaryToday},\n        {title: \"Total\", stat: summaryTotal},\n        {title: \"Topics\", stat: summaryTopics}\n    ];\n\n    return (\n        onSpecificView ? \n        <div> \n            <div className=\"dashboard sub-dashboard\">\n                <button className=\"exit-button\" onClick={initialView}><img className=\"back-arrow\" src=\"./assets/icons/arrow.svg\"></img></button>\n            </div>\n            <Responses header=\"General Inquiries\" subjectTitle={specificViewTitle} data={specificSubjectData}></Responses>\n        </div>\n        : <div className=\"dashboard sub-dashboard\">\n            <div>\n                <Header title=\"General Inquiries\"></Header>\n                <SubDashboard title=\"TOP SUBJECTS\" data={subjectsInquiries} changeViewFunc={specificView} emailTemplates={false} fullPageView={false}></SubDashboard>\n                <div className=\"sub-summary\">\n                    <SubHeaderLine title=\"SUMMARY\" subHeaderValue={\"Active Inquiries\"}></SubHeaderLine>\n                    <StatCardRow spaceEven={false} cards={statCards}></StatCardRow>\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { Header } from '../Components/Header';\nimport { SubDashboard, SubDashboardData } from '../Components/SubDashboard';\nimport { SubHeaderLine } from '../Components/SubHeaderLine';\nimport { StatCardRow } from '../Components/StatCardRow';\nimport { Responses } from './Responses';\nimport * as Endpoints from '../Constants/Endpoints';\n\n// TODO: will data be pre-sorted on back-end?\n// currently using test data\nfunction getSubDashboardData(): Array<SubDashboardData> {\n    var data = [];\n    data.push({name: \"Test\", value: 22});\n    return data as Array<SubDashboardData>;\n}\n\nexport function Casework() {\n    const testData = getSubDashboardData();\n    const [onSpecificView, setSpecificView] = useState(false);\n    const [specificViewTitle, setSpecificViewTitle] = useState(\"\");\n    const [specificTopicsData, setSpecificTopicsData] = useState<SubDashboardData[]>([]);\n    const [topicsResponsesData, setTopicsResponsesData] = useState<Map<string, SubDashboardData[]>>();\n    const [topicsCases, setTopicsCases] = useState<SubDashboardData[]>([]);\n    const [summaryToday, setSummaryToday] = useState(0);\n    const [summaryTotal, setSummaryTotal] = useState(0);\n    const [summaryTopics, setSummaryTopics] = useState(0);\n\n\n    const getResponses = async() => {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        const response = await fetch(Endpoints.Testbase + Endpoints.Responses + \"?\" + Endpoints.ResponsesActiveCasework, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": authToken\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const responsesGeneral = await response.json();\n        var formResponses: SubDashboardData[] = [];\n        let topicsMap = new Map<string, SubDashboardData[]>();\n        let topicsCases = new Map<string, number>();\n\n        responsesGeneral.forEach(function(formResponse: any) {\n            var d = new Date(formResponse.createdAt);\n            var t = d.toLocaleString(\"en-US\");\n            var topics = formResponse.tags;\n            var data: SubDashboardData = {id: formResponse.id, email: formResponse.emailAddress, name: formResponse.name + \" / \" + formResponse.subject, value: t, body: formResponse.body}\n\n            topics.forEach((topic: any) => {\n                if (topicsMap.has(topic.value)) {\n                    var getList = topicsMap.get(topic.value);\n                    getList?.push(data);\n                    topicsMap.set(topic.value, getList || []);\n                } else {\n                    var newList: SubDashboardData[] = [];\n                    newList.push(data);\n                    topicsMap.set(topic.value, newList);\n                }\n\n                topicsCases.set(topic.value, (topicsCases.get(topic.value) || 0) + 1);\n\n            });\n            formResponses.push(data);\n        });\n\n        var cases: SubDashboardData[] = [];\n        Array.from(topicsCases.keys()).forEach((key) => {\n            var subText = \" case\";\n            if ((topicsCases.get(key) || 0) > 1) {\n                subText = \" cases\";\n            }\n            cases.push({name: key, value: topicsCases.get(key) + subText});\n        })\n\n        cases.sort((a, b) => (a.value > b.value) ? -1 : (a.value === b.value) ? -1 : 1);\n\n        setSummaryTopics(cases.length);\n        setSummaryTotal(formResponses.length);\n        setTopicsCases(cases);\n        setTopicsResponsesData(topicsMap);\n    }\n\n    const getResponsesToday = async() => {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        const response = await fetch(Endpoints.Testbase + Endpoints.Responses + \"?\" + Endpoints.ResponsesActiveCasework + \"&\" + Endpoints.ResponsesTodayOnly, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": authToken\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const responsesToday = await response.json();\n        setSummaryToday(responsesToday.length);\n    }\n\n    function specificView(data: SubDashboardData) {\n        setSpecificViewTitle(data.name);\n        setSpecificTopicsData(topicsResponsesData?.get(data.name) || []);\n        setSpecificView(true);\n    }\n\n    function initialView() {\n        setSpecificView(false);\n    }\n    \n    useEffect(() => {\n        getResponses();\n        getResponsesToday();\n    }, []);\n\n    let statCards = [\n        {title: \"New Today\", stat: summaryToday},\n        {title: \"Total\", stat: summaryTotal},\n        {title: \"Topics\", stat: summaryTopics}\n    ];\n\n    return (\n        onSpecificView ? \n        <div> \n            <div className=\"dashboard sub-dashboard\">\n                <button className=\"exit-button\" onClick={initialView}><img className=\"back-arrow\" src=\"./assets/icons/arrow.svg\"></img></button>\n            </div>\n            <Responses header=\"Casework\" subjectTitle={specificViewTitle} data={specificTopicsData}></Responses>\n        </div>\n        : <div className=\"dashboard sub-dashboard\">\n            <div>\n                <Header title=\"Casework\"></Header>\n                <SubDashboard title=\"TOPIC\" data={topicsCases} changeViewFunc={specificView} emailTemplates={false} fullPageView={false}></SubDashboard>\n                <div className=\"sub-summary\">\n                    <SubHeaderLine title=\"SUMMARY\" subHeaderValue={\"Active Cases\"}></SubHeaderLine>\n                    <StatCardRow spaceEven={false} cards={statCards}></StatCardRow>\n                </div>\n            </div>\n        </div>\n    );\n}","import { useEffect, useState } from 'react';\nimport { Header } from '../Components/Header';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip } from 'recharts';\nimport * as Endpoints from '../Constants/Endpoints';\n\nexport type EngagementReportBarChartData = {\n    name: string;\n    count: number;\n}\n\nexport function EngagementReports() {\n  const [engagementChartData, setEngagementChartData] = useState<EngagementReportBarChartData[]>();\n\n    const getTags = async() => {\n      var authToken = localStorage.getItem(\"Authorization\") || \"\";\n      const response = await fetch(Endpoints.Testbase + Endpoints.Tags, {\n          method: \"GET\",\n          headers: new Headers({\n              \"Authorization\": authToken\n          })\n      });\n      if (response.status >= 300) {\n          console.log(\"Error retrieving form responses\");\n          return;\n      }\n      var topicCountsMap = new Map<string, number>();\n      const tags = await response.json();\n      tags.forEach((tag: any) => {\n        if (topicCountsMap.has(tag.value)) {\n          topicCountsMap.set(tag.value, (topicCountsMap.get(tag.value) || 0) + 1);\n        } else {\n          topicCountsMap.set(tag.value, 1);\n        }\n      });\n      \n      var engagementChartData: EngagementReportBarChartData[] = [];\n\n      Array.from(topicCountsMap.keys()).forEach((key) => {\n        engagementChartData.push({name: key, count: topicCountsMap.get(key) || 0});\n      });\n\n      engagementChartData.sort((a, b) => {\n        if (a.count > b.count) {\n            return -1;\n        } else if (a.count < b.count) {\n            return 1;\n        } else {\n            return 0;\n        }\n      });\n\n      setEngagementChartData(engagementChartData);\n    }\n\n    useEffect(() => {\n        getTags();\n    }, []);\n\n    return (\n        <div className=\"dashboard sub-dashboard\">\n            <Header title=\"Engagement Reports\"></Header>\n            <h2>Topics/Inquiries</h2>\n            <BarChart\n                width={700}\n                height={500}\n                data={engagementChartData}\n                margin={{\n                    top: 5,\n                    right: 30,\n                    left: 20,\n                    bottom: 5,\n                }}\n                >\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Bar dataKey=\"count\" fill=\"#855CF8\" />\n            </BarChart>\n        </div>\n    );\n}","export function Settings() {\n    return (\n        <div>\n        </div>\n    );\n}","import React, { useState } from 'react';\nimport './Login.css';\n// import * as Endpoints from '../Endpoints/Endpoints';\n\nexport type LoginProps = {\n    userLogin: Function;\n}\n\nexport function Login(props: LoginProps) {\n    const [onSignup, setOnSignup] = useState(false);\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    const attemptLogin = async(e: any) => {\n        e.preventDefault();\n        var login = {email: email, password: password};\n        var jsonLogin = JSON.stringify(login);\n        const response = await fetch(\"http://localhost/v0/login\", {\n            method: \"POST\",\n            body: jsonLogin,\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        console.log(response);\n        if (response.status >= 300) {\n            alert(\"Invalid email or password\");\n            return;\n        }\n        const authToken = response.headers.get(\"Authorization\");\n        props.userLogin(authToken);\n    }\n\n    const attemptSignup = async(e: any) => {\n        e.preventDefault();\n        var newUser = {email: email, password: password, passwordConfirm: confirmPassword, firstName: firstName, lastName: lastName};\n        var jsonNewUser = JSON.stringify(newUser);\n        const response = await fetch(\"http://localhost/v0/signup\", {\n            method: \"POST\",\n            body: jsonNewUser,\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            alert(\"Invalid email or password\");\n            return;\n        }\n        const authToken = response.headers.get(\"Authorization\");\n        props.userLogin(authToken);\n    }\n\n    function switchLoginSignup(isSignupView: boolean) {\n        setFirstName(\"\");\n        setLastName(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n        setOnSignup(isSignupView);\n    }\n\n    return(\n        <div className=\"login-page\">\n            <div className=\"login-container\">\n                <img src=\"./assets/icons/logo.png\"></img>\n                <h1 className=\"login-title\">Civic QA</h1>\n                {onSignup ? <div><form className=\"login-form\" autoComplete=\"off\" onSubmit={attemptSignup}>\n                    <input className=\"login-form-input login-form-text\" name=\"fname\" type=\"text\" value={firstName} placeholder=\"First Name\" onChange={e => setFirstName(e.target.value)} required/>\n                    <input className=\"login-form-input login-form-text\" name=\"lname\" type=\"text\" value={lastName} placeholder=\"Last Name\" onChange={e => setLastName(e.target.value)} required/>\n                    <input className=\"login-form-input login-form-text\" name=\"email\" type=\"text\" value={email} placeholder=\"Email\" onChange={e => setEmail(e.target.value)} required />\n                    <input className=\"login-form-input login-form-text\" name=\"password\" type=\"password\" value={password} placeholder=\"Password\" onChange={e => setPassword(e.target.value)} required/>\n                    <input className=\"login-form-input login-form-text\" name=\"confirm-password\" type=\"password\" value={confirmPassword} placeholder=\"Confirm Password\" onChange={e => setConfirmPassword(e.target.value)} required/>\n                    <input className=\"login-form-input login-btn\" type=\"submit\" value=\"Sign up\" />\n                    </form>\n                    <button className=\"switch-login-signup-btn\" onClick={() => switchLoginSignup(false)}>Already have an account? Login</button>\n                </div> : \n                <div>\n                    <form className=\"login-form\" autoComplete=\"off\" onSubmit={attemptLogin}>\n                        <input className=\"login-form-input login-form-text\" name=\"email\" type=\"text\" value={email} placeholder=\"Email\" onChange={e => setEmail(e.target.value)} required/>\n                        <input className=\"login-form-input login-form-text\" name=\"password\" type=\"password\" value={password} placeholder=\"Password\" onChange={e => setPassword(e.target.value)} required/>\n                        <input className=\"login-form-input login-btn\" type=\"submit\" value=\"Login\" />\n                    </form>\n                    <button className=\"switch-login-signup-btn\" onClick={() => switchLoginSignup(true)}>New? Create Account</button>\n                </div>}\n            </div>\n        </div>\n    );\n}","import './App.css';\nimport React, { useEffect, useState} from \"react\";\nimport { Route, NavLink, Redirect, useLocation } from \"react-router-dom\";\nimport { ProfileHeader } from \"./Profile/ProfileHeader\";\nimport { Dashboard } from './Views/Dashboard';\nimport { General } from './Views/General';\nimport { Casework } from './Views/Casework';\nimport { Responses } from './Views/Responses';\nimport { EngagementReports } from './Views/EngagementReports';\nimport { Templates } from './Views/Templates';\nimport { Settings } from './Views/Settings';\nimport { Login } from './Views/Login';\nimport * as Constants from './Constants/Constants';\n\nexport default function App() {\n  const authToken = localStorage.getItem(\"Authorization\");\n  const [auth, setAuth] = useState((authToken != \"\") && (authToken != null));\n  const [path, setPath] = useState(\"/dashboard\");\n  const location = useLocation();\n\n  useEffect(() => {\n    setPath(location.pathname);\n  }, [location]);\n\n  const userLogout = async(e: any) => {\n    e.preventDefault();\n    var authToken = localStorage.getItem(\"Authorization\") || \"\";\n    const response = await fetch(\"http://localhost/v0/logout\", {\n      method: \"POST\",\n      headers: new Headers({\n          \"Authorization\": authToken\n      })\n    });\n    if (response.status >= 300) {\n      console.log(\"Failed to logout\");\n    }\n    localStorage.removeItem(\"Authorization\");\n    setAuth(false);\n  }\n\n  function userLogin(authToken: string) {\n    localStorage.setItem(\"Authorization\", authToken);\n    setAuth(true);\n  }\n\n  return (\n      <div className=\"App\">\n        <Route path=\"/login\" component={() => <Login userLogin={userLogin}/>}></Route>\n        {auth ? <Redirect to=\"/dashboard\"/> : <Redirect to=\"/login\"/>}\n        {auth ?\n          <div>\n            <div>\n              <div className=\"profile-header\">\n                <ProfileHeader></ProfileHeader>\n              </div>\n              <nav className=\"nav-bar\">\n                <h1 className=\"title\">{Constants.Title}</h1>\n                <ul>\n                  <li>{path == \"/dashboard\" ? <img className=\"icon\" src=\"./assets/icons/pie-chart-active.svg\"/> : <img className=\"icon\" src=\"./assets/icons/pie-chart.svg\"/>}<NavLink className=\"nav-link\" activeClassName=\"active-link\" to=\"/dashboard\">{Constants.Dashboard}</NavLink></li>\n                  <li className=\"dashboard-sub-li\"><NavLink className=\"nav-link\" activeClassName=\"active-link\" to=\"/general\">{Constants.GeneralInquiries}</NavLink></li>\n                  <li className=\"dashboard-sub-li\"><NavLink className=\"nav-link\" activeClassName=\"active-link\" to=\"/casework\">{Constants.Casework}</NavLink></li>\n                  <li>{path ==\"/responses\" ? <img className=\"icon\" src=\"./assets/icons/inbox-active.svg\"/> : <img className=\"icon\" src=\"./assets/icons/inbox.svg\"/>}<NavLink className=\"nav-link\" activeClassName=\"active-link\" to=\"/responses\">{Constants.Responses}</NavLink></li>\n                  <li>{path ==\"/engagement-reports\" ? <img className=\"icon\" src=\"./assets/icons/stats-active.svg\"/> :<img className=\"icon\" src=\"./assets/icons/stats.svg\"/>}<NavLink className=\"nav-link\" activeClassName=\"active-link\" to=\"/engagement-reports\">{Constants.EngagementReports}</NavLink></li>\n                </ul>\n                <div className=\"compose-email-btn-container\">\n                  <hr className=\"solid\"/>\n                </div>\n                <ul>\n                <li>{path ==\"/settings\" ? <img className=\"icon\" src=\"./assets/icons/settings-active.svg\"/> : <img className=\"icon\" src=\"./assets/icons/settings.svg\"/>}<NavLink className=\"nav-link\" activeClassName=\"active-link\" to=\"/settings\">{Constants.Settings}</NavLink></li>\n                  <li><img className=\"icon\" src=\"./assets/icons/logout.svg\"/><button className=\"logout-btn\" onClick={userLogout}>{Constants.Logout}</button></li>\n                </ul>\n              </nav>\n            </div>\n            <Route path=\"/dashboard\" component={Dashboard}></Route>\n            <Route path=\"/general\" component={General}></Route>\n            <Route path=\"/casework\" component={Casework}></Route>\n            <Route path=\"/responses\" component={Responses}/>\n            <Route path=\"/engagement-reports\" component={EngagementReports}/>\n            <Route path=\"/settings\" component={Settings}/>\n          </div> : null}\n        </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Router><App /></Router>, rootElement);\n"],"sourceRoot":""}