{"version":3,"sources":["Redux/Reducers/authReducer.ts","Redux/Reducers/pathReducer.ts","Redux/Reducers/rootReducer.ts","Redux/Store/store.ts","Profile/ProfileHeader.tsx","Components/StatCard.tsx","Components/StatCardRow.tsx","Constants/Constants.ts","Components/DropdownMenu.tsx","Dashboard/DashboardChart.tsx","Constants/Endpoints.ts","Dashboard/DashboardChartStats.tsx","Views/Dashboard.tsx","Components/Header.tsx","Components/SubDashboardCard.tsx","Components/SubHeaderLine.tsx","Components/EmailTemplateCard.tsx","Components/SubDashboard.tsx","Components/Tag.tsx","Components/Tags.tsx","Views/FormResponseView.tsx","Views/Responses.tsx","Views/General.tsx","Views/Casework.tsx","Views/EngagementReports.tsx","Views/Settings.tsx","Views/Login.tsx","App.tsx","index.tsx"],"names":["initialState","auth","localStorage","getItem","authReducer","state","action","type","payload","path","pathReducer","rootReducer","combineReducers","store","createStore","ProfileHeader","className","height","width","cx","cy","r","stroke","stroke-width","fill","StatCard","props","title","stat","StatCardRow","statCards","cards","forEach","card","push","spaceEven","Casework","Responses","Purple","DropdownMenu","useState","showMenu","toggleMenu","onClick","chartView","src","view","Constants","setChartView","DashboardChart","AreaChart","data","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","dataKey","YAxis","CartesianGrid","vertical","Tooltip","Area","fillOpacity","Base","ResponsesTodayOnly","ResponsesActiveGeneral","ResponsesActiveCasework","ResponsesTags","Mailto","DashboardChartStats","total","setTotal","today","setToday","todayTrends","setTodayTrends","a","authToken","fetch","Endpoints","method","headers","Headers","responseTotal","status","console","log","json","formsTotal","length","responseToday","formsToday","trendData","Map","form","hour","Date","createdAt","getHours","has","set","get","trendDataArray","i","index","responses","useEffect","getTotal","getTodayTrends","Dashboard","useSelector","general","setGeneral","casework","setCasework","getGeneralResponses","response","responsesGeneral","getCaseworkResponses","responsesCasework","Header","SubDashboardCard","name","changeViewFunc","value","SubHeaderLine","subHeaderValue","EmailTemplateCard","SubDashboard","emailTemplates","d","undefined","fullPageView","Tag","remove","Tags","wrapperRef","useRef","inputText","setInputText","inputShow","setInputShow","enterNewTag","e","preventDefault","addTag","handleClickOutside","current","contains","target","document","addEventListener","removeEventListener","tagList","values","removeTag","onSubmit","ref","placeholder","onChange","FormResponseView","isResolved","setIsResolved","tags","setTags","messageResponse","setMessageResponse","mailtoRequest","to","email","subject","body","jsonMailtoRequest","JSON","stringify","text","mailtoString","window","location","href","getTags","responseId","tag","tagValue","tagJson","resolveResponse","patchActive","active","setSpecificView","clickCheckbox","headerTitle","header","subjecTitle","subjectTitle","onResponseView","setResponseView","responseData","setData","specificResponseData","setSpecificResponseData","getResponses","forms","formResponses","formResponse","t","toLocaleString","emailAddress","General","onSpecificView","specificViewTitle","setSpecificViewTitle","specificSubjectData","setSpecificSubjectData","subjectsResponsesData","setSubjectsResponsesData","subjectsInquiries","setSubjectsInquiries","summaryToday","setSummaryToday","summaryTotal","setSummaryTotal","summaryTopics","setSummaryTopics","subjectsMap","subjects","getList","newList","inquiries","Array","from","keys","key","subText","sort","b","getResponsesToday","responsesToday","specificTopicsData","setSpecificTopicsData","topicsResponsesData","setTopicsResponsesData","topicsCases","setTopicsCases","topicsMap","topics","topic","cases","EngagementReports","engagementChartData","setEngagementChartData","topicCountsMap","count","BarChart","margin","top","right","left","bottom","Bar","Settings","Login","onSignup","setOnSignup","firstName","setFirstName","lastName","setLastName","setEmail","password","setPassword","confirmPassword","setConfirmPassword","attemptLogin","login","jsonLogin","alert","userLogin","attemptSignup","newUser","passwordConfirm","jsonNewUser","switchLoginSignup","isSignupView","autoComplete","required","App","useLocation","authDispatch","useDispatch","pathDispatch","handleSetAuth","handleSetPath","pathname","userLogout","setItem","component","activeClassName","rootElement","getElementById","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.09f276da.chunk.js","sourcesContent":["import { AuthActions } from \"../Actions/authActions\";\n\ntype AuthState = {\n    auth: string;\n}\n\nconst initialState: AuthState = {\n    auth: localStorage.getItem(\"Authorization\") || '',\n}\nconst authReducer = (state: AuthState = initialState, action: AuthActions) => {\n    switch(action.type) {\n        case 'SET_AUTH':\n            return {\n                ...state,\n                auth: action.payload,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","import { PathActions } from \"../Actions/pathActions\";\n\ntype PathState = {\n    path: string;\n}\n\nconst initialState: PathState = {\n    path: '/dashboard',\n}\nconst pathReducer = (state: PathState = initialState, action: PathActions) => {\n    switch(action.type) {\n        case 'SET_PATH':\n            return {\n                ...state,\n                path: action.payload,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default pathReducer;","import { combineReducers } from 'redux'\nimport authReducer from './authReducer';\nimport pathReducer from './pathReducer';\n\nconst rootReducer = combineReducers({\n    path: pathReducer,\n    auth: authReducer,\n})\n\nexport type AppState = ReturnType<typeof rootReducer>\nexport default rootReducer;","import { createStore } from 'redux'\nimport rootReducer from '../Reducers/rootReducer'\n\nconst store = createStore(rootReducer);\nexport default store;","import React from 'react';\nimport './ProfileHeader.css';\n\nexport function ProfileHeader() {\n    return (\n        <div className=\"profile-heading\">\n            <p className=\"profile-name\">Profile Name</p>\n            <svg height=\"100\" width=\"100\">\n                <circle cx=\"25\" cy=\"25\" r=\"24\" stroke=\"#DFE0EB\" stroke-width=\"1\" fill=\"white\" />\n            </svg>\n        </div>\n    );\n}","import './StatCard.css';\n\nexport type StatCardProps = {\n    title: string;\n    stat: number;\n};\n\nexport function StatCard(props: StatCardProps) {\n    return (\n        <div className=\"stat-card\">\n            <h1 className=\"stat-card-title\">{props.title}</h1>\n            <p className=\"stat-card-data\">{props.stat}</p>\n        </div>\n    );\n}","import { StatCard, StatCardProps } from './StatCard';\nimport './StatCardRow.css';\n\nexport type StatCardRowProps = {\n    cards: Array<StatCardProps>;\n    spaceEven: boolean;\n}\n\nexport function StatCardRow(props: StatCardRowProps) {\n    let statCards:any[] = [];\n    props.cards.forEach(card => statCards.push(<StatCard title={card.title} stat={card.stat}></StatCard>));\n\n    return(\n        props.spaceEven ? <div className=\"stat-cards-even\">\n            {statCards}\n        </div> :\n        <div className=\"stat-cards-between\">\n            {statCards}\n        </div>\n    );\n}","// navigation panel\nexport const Title = \"Civic QA\";\nexport const Dashboard = \"Dashboard\";\nexport const GeneralInquiries = \"General Inquiries\";\nexport const EngagementReports = \"Engagement Reports\";\nexport const Templates = \"Your Templates\";\nexport const ComposeEmail = \"Compose Email\";\nexport const Settings = \"Settings\";\nexport const Logout = \"Logout\";\n\n// stat cards\nexport const General = \"General\";\nexport const Casework = \"Casework\";\n\n// chart\nexport const ChartTitle = \"Today's trends\";\n\n// chart dropdown menu options\nexport const Responses = \"Form Responses\";\nexport const Topics = \"Topics\";\n\n// chart stat cards\nexport const Total = \"Total\";\nexport const Today = \"Today\";\n\n// colors\nexport const Purple = \"#9B51E0\";","import { useState, Dispatch, SetStateAction } from 'react';\nimport * as Constants from '../Constants/Constants';\nimport './DropdownMenu.css';\n\nexport type DropdownMenuProps = {\n    chartView: string;\n    setChartView: Dispatch<SetStateAction<string>>;\n};\n\n// add topics when there is time\n// <button onClick={() => SetChartViewAndToggleMenu(Constants.Topics)} className=\"dropdown-menu-btn\"><p className=\"dropdown-menu-btn-text\">{Constants.Topics}</p></button>\n\nexport function DropdownMenu(props: DropdownMenuProps) {\n    // dropdown menu state\n    const [showMenu, toggleMenu] = useState(false);\n\n    // set chart view and auto close menu\n    function SetChartViewAndToggleMenu(view: string) {\n        props.setChartView(view);\n        toggleMenu(showMenu => !showMenu);\n    }\n\n    return (\n        <div>\n            <button className=\"dropdown-menu-btn\" onClick={() => toggleMenu(showMenu => !showMenu)}>\n                <p className=\"dropdown-menu-btn-text\">{props.chartView}</p>\n                {showMenu ? <img className=\"dropdown-menu-arrow rotate-arrow\" src=\"./assets/icons/down-arrow.svg\" /> : <img className=\"dropdown-menu-arrow\" src=\"./assets/icons/down-arrow.svg\" />}\n            </button>\n            {showMenu ? \n                <div className=\"menu\">\n                    <button onClick={() => SetChartViewAndToggleMenu(Constants.Responses)} className=\"dropdown-menu-btn\"><p className=\"dropdown-menu-btn-text\">{Constants.Responses}</p></button>\n                </div> : <div />}\n        </div>\n    );\n}","import React from 'react';\nimport { AreaChart, Area, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\nimport * as Constants from '../Constants/Constants';\n\nexport type ChartData = {\n    index: number;\n    responses: number;\n}\n\nexport type DashboardChartProps = {\n    data: Array<ChartData>\n};\n\nexport function DashboardChart(props: DashboardChartProps) {\n    return (\n        <div>\n            <AreaChart width={800} height={450} data={props.data}>\n                <defs>\n                    <linearGradient id=\"purpleGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"0%\" stopColor={Constants.Purple} stopOpacity={0.5}/>\n                        <stop offset=\"100%\" stopColor={Constants.Purple} stopOpacity={0}/>\n                    </linearGradient>\n                </defs>\n                <XAxis dataKey=\"index\" />\n                <YAxis />\n                <CartesianGrid stroke=\"#eee\" vertical={false} />\n                <Tooltip />\n                <Area type=\"monotone\" dataKey=\"responses\" stroke={Constants.Purple} fillOpacity={1} fill=\"url(#purpleGradient)\" />\n            </AreaChart>\n        </div>\n    );\n}","export const Base = \"http://165.232.148.104/v0\";\nexport const Signup = \"/signup\";\nexport const Responses = \"/responses\";\nexport const ResponsesActiveOnly = \"/responses?activeOnly=true\";\nexport const ResponsesTodayOnly = \"/responses?todayOnly=true\";\nexport const ResponsesActiveGeneral = \"/responses?activeOnly=true&inquiryType=general\";\nexport const ResponsesActiveCasework = \"/responses?activeOnly=true&inquiryType=casework\";\nexport const ResponsesTags = \"/tags\";\nexport const Mailto = \"/mailto\";\nexport const Tags = \"/tags\";","import React, { useEffect, useState } from 'react';\nimport { DropdownMenu } from '../Components/DropdownMenu';\nimport { ChartData, DashboardChart } from '../Dashboard/DashboardChart';\nimport { StatCard } from '../Components/StatCard';\nimport * as Constants from '../Constants/Constants';\nimport * as Endpoints from '../Constants/Endpoints';\n\nexport function DashboardChartStats() {\n    const [total, setTotal] = useState(0);\n    const [today, setToday] = useState(0);\n    const [todayTrends, setTodayTrends] = useState<ChartData[]>([]);\n    const [chartView, setChartView] = useState(Constants.Responses);\n\n    async function getTotal() {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        const responseTotal = await fetch(Endpoints.Base + Endpoints.Responses, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": authToken\n            })\n        });\n        if (responseTotal.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const formsTotal = await responseTotal.json();\n        setTotal(formsTotal.length);\n    }\n\n    async function getTodayTrends() {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        const responseToday= await fetch(Endpoints.Base + Endpoints.Responses + \"?\" + Endpoints.ResponsesTodayOnly, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": authToken\n            })\n        });\n        if (responseToday.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const formsToday = await responseToday.json();\n        // map hour and form response counts\n        var trendData = new Map<number, number>();\n        formsToday.forEach(function(form: any) {\n            var date = new Date(form.createdAt);\n            var hour = date.getHours();\n            if (trendData.has(hour)) {\n                trendData.set(hour, (trendData.get(hour) || 0) + 1);\n            } else {\n                trendData.set(hour, 1);\n            }\n        });\n        // convert map to array for recharts line chart\n        var trendDataArray: Array<ChartData> = [];\n        for (var i = 0; i < 24; i++) {\n            trendDataArray.push({index: i, responses: trendData.get(i) || 0});\n        }\n        setTodayTrends(trendDataArray);\n        setToday(formsToday.length);\n    }\n\n    useEffect(() => {\n        getTotal();\n        getTodayTrends();\n    }, []);\n\n    return(\n        <div className=\"trends\">\n            <div className=\"chart-heading\">\n                <h2 className=\"chart-title\">{Constants.ChartTitle}</h2>\n                <div className=\"dropdown-menu\">\n                    <DropdownMenu chartView={chartView} setChartView={setChartView}></DropdownMenu>\n                </div>\n            </div>\n            <div className=\"chart-stats\">\n                <DashboardChart data={todayTrends}></DashboardChart>\n                <div className=\"chart-stats-cards\">\n                    <StatCard title={Constants.Total} stat={total}></StatCard>\n                    <StatCard title={Constants.Today} stat={today}></StatCard>\n                </div>\n            </div>\n        </div>\n    );\n}","import { useEffect, useState } from 'react';\nimport { StatCardRow } from '../Components/StatCardRow';\nimport { DashboardChartStats } from '../Dashboard/DashboardChartStats';\nimport { useSelector } from 'react-redux';\nimport { AppState } from '../Redux/Reducers/rootReducer'\nimport * as Constants from '../Constants/Constants';\nimport * as Endpoints from '../Constants/Endpoints';\nimport './Dashboard.css';\n\n// currently using dummy data for StatCards and LineChart\nexport function Dashboard() {\n    const { auth } = useSelector((state: AppState) => state.auth);\n    const [general, setGeneral] = useState(0);\n    const [casework, setCasework] = useState(0);\n\n    const getGeneralResponses = async() => {\n        const response = await fetch(Endpoints.Base + Endpoints.ResponsesActiveGeneral, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": auth\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const responsesGeneral = await response.json();\n        setGeneral(responsesGeneral.length);\n    }\n\n    const getCaseworkResponses = async() => {\n        const response = await fetch(Endpoints.Base + Endpoints.ResponsesActiveCasework, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": auth\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const responsesCasework = await response.json();\n        setCasework(responsesCasework.length);\n    }\n    \n    useEffect(() => {\n        getGeneralResponses();\n        getCaseworkResponses();\n    }, []);\n\n    let statCards = [\n        {title: Constants.General, stat: general},\n        {title: Constants.Casework, stat: casework}\n    ]\n\n    return (\n        <div className=\"dashboard\">\n            <StatCardRow spaceEven={true} cards={statCards}></StatCardRow>\n            <DashboardChartStats></DashboardChartStats>\n        </div>\n    );\n}","export type HeaderProps = {\n    title: string;\n}\n\nexport function Header(props: HeaderProps) {\n    return(\n        <div>\n            <h1 className=\"sub-dash-title\">{props.title}</h1>\n        </div>\n    );\n}","import { SubDashboardData } from '../Components/SubDashboard';\nimport './SubDashboardCard.css';\n\nexport type SubDashboardCardProps = {\n    data: SubDashboardData;\n    changeViewFunc: Function;\n}\n\nexport function SubDashboardCard(props: SubDashboardCardProps) {\n    return (\n        <div className=\"sub-dash-card\">\n            <p className=\"sub-dash-card-name\">{props.data.name}</p>\n            <button className=\"sub-dash-card-btn\" onClick={() => props.changeViewFunc(props.data)}>View</button>\n            <p className=\"sub-dash-card-value\">{props.data.value}</p>\n        </div>\n    );\n}","export type SubHeaderLineProps = {\n    title: string;\n    subHeaderValue?: any;\n}\n\nexport function SubHeaderLine(props: SubHeaderLineProps) {\n    return(\n        <div>\n            <div className=\"sub-dash-sub-header\">\n                <h2 className=\"sub-dash-sub-title\">{props.title}</h2>\n                {props.subHeaderValue ? <h1 className=\"sub-dash-sub-number\">{props.subHeaderValue}</h1> : null}\n                <hr className=\"sub-dash-line\" />\n            </div>\n        </div>\n    );\n}","import './EmailTemplateCard.css';\n\nexport type EmailTemplateCardProps = {\n    name: string;\n    value: number;\n}\n\nexport function EmailTemplateCard(props: EmailTemplateCardProps) {\n    return (\n        <div className=\"email-tmp-card\">\n            <p className=\"email-tmp-card-name\">{props.name}</p>\n            <button className=\"email-tmp-card-btn\">View</button>\n            <p className=\"email-tmp-card-value\">{props.value}</p>\n        </div>\n    );\n}","import { Dispatch, SetStateAction } from 'react';\nimport { SubDashboardCard } from './SubDashboardCard';\nimport { SubHeaderLine } from './SubHeaderLine';\nimport './SubDashboard.css';\nimport { EmailTemplateCard } from './EmailTemplateCard';\n\nexport type SubDashboardData = {\n    id?: string;\n    email?: string;\n    name: string;\n    value: any;\n    body?: string;\n}\n\nexport type SubDashboardProps = {\n    title: string;\n    data: Array<SubDashboardData>;\n    changeViewFunc: Function;\n    emailTemplates: boolean;\n    fullPageView: boolean;\n    subHeaderValue?: any;\n};\n\nexport function SubDashboard(props: SubDashboardProps) {\n    let cards:any[] = [];\n    if (props.emailTemplates) {\n        props.data.forEach(d => cards.push(<EmailTemplateCard name={d.name} value={d.value}></EmailTemplateCard>))\n    } else {\n        props.data.forEach(d => cards.push(<SubDashboardCard data={d} changeViewFunc={props.changeViewFunc}></SubDashboardCard>));\n    }\n\n    return (\n        <div>\n            <div>\n                <SubHeaderLine title={props.title} subHeaderValue={props.subHeaderValue ? props.subHeaderValue : undefined}></SubHeaderLine>\n                {props.fullPageView ? \n                <div className=\"sub-dash-cards-700\">\n                    {cards}\n                </div> :\n                <div className=\"sub-dash-cards-400\">\n                    {cards}\n                </div>\n                }\n\n            </div>\n        </div>\n    );\n}","import './Tag.css';\n\nexport type TagProps = {\n    value: string;\n    remove: Function;\n}\n\nexport function Tag(props: TagProps) {\n    return(\n        <div className=\"tag\">\n            <p className=\"tag-value\">{\"#\" + props.value}</p>\n            <button className=\"tag-remove-btn\" onClick={() => props.remove(props.value)}><img className=\"icon\" src=\"./assets/icons/remove.svg\"></img></button>\n        </div>\n    );\n}","import { useEffect, useRef, useState } from 'react';\nimport { Tag } from './Tag';\nimport './Tag.css';\n\nexport type TagProps = {\n    values: string[];\n    addTag: Function;\n    removeTag: Function;\n}\n\nexport function Tags(props: TagProps) {\n    const wrapperRef = useRef<HTMLInputElement>(null);\n    const [inputText, setInputText] = useState(\"\");\n    const [inputShow, setInputShow] = useState(false);\n\n    function addNewTag() {\n        if (inputText.length > 0) {\n            props.addTag(inputText);\n        }\n        setInputShow(false);\n        setInputText(\"\");\n    }\n\n    function enterNewTag(e: any) {\n        e.preventDefault();\n        addNewTag();\n    }  \n\n    function handleClickOutside(e: any) {\n        if (wrapperRef.current && !wrapperRef.current.contains(e.target)) {\n            setInputShow(false);\n        }\n    }\n\n    useEffect(() => {\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, []);\n\n    let tagList: any[] = [];\n    props.values.forEach(function(value) {\n        tagList.push(<Tag value={value} remove={props.removeTag}></Tag>)\n    });\n\n    return(\n        <div className=\"tags-container\">\n            {tagList}\n            {inputShow ? <div>\n                    <form onSubmit={e => enterNewTag(e)}>\n                        <input ref={wrapperRef} className=\"tag-add-input\" type=\"text\" placeholder={\"#\"} onChange={e => setInputText(e.target.value)}></input>\n                    </form>\n                </div>\n                : <button className=\"tag-add-btn\" onClick={() => setInputShow(true)}><img className=\"icon\" src=\"./assets/icons/plus.svg\"></img></button>}\n        </div>\n    );\n}","import { useEffect, useState } from 'react';\nimport { Header } from '../Components/Header';\nimport { SubHeaderLine } from '../Components/SubHeaderLine';\nimport { Tags } from '../Components/Tags';\nimport * as Endpoints from '../Constants/Endpoints';\nimport \"./FormResponseView.css\";\n\nexport type FormResponseViewProps = {\n    responseId: string;\n    email: string;\n    title: string;\n    subject: string;\n    body: string;\n    setSpecificView: Function;\n};\n\nexport function FormResponseView(props: FormResponseViewProps) {\n    const [isResolved, setIsResolved] = useState(true);\n    const [tags, setTags] = useState<any[]>([]);\n    const [messageResponse, setMessageResponse] = useState(\"\");\n\n    async function createMailto() {\n        var mailtoRequest = {to: [props.email], subject: props.subject, body: messageResponse};\n        var jsonMailtoRequest = JSON.stringify(mailtoRequest);\n        const response = await fetch(Endpoints.Base + Endpoints.Mailto, {\n            method: \"POST\",\n            body: jsonMailtoRequest,\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error creating mailto\");\n            return;\n        }\n        const mailtoString = await response.text();\n        window.location.href = mailtoString;\n    }\n\n    const getTags = async() => {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        const response = await fetch(Endpoints.Base + Endpoints.Responses + \"/\" + props.responseId + Endpoints.ResponsesTags, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": authToken\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retreiving response tags\");\n            return;\n        }\n        const tags = await response.json();\n        var tagList: any[] = [];\n        tags.forEach((tag: any) => {\n            tagList.push(tag.value);\n        });\n        setTags(tagList);\n    }\n\n    async function removeTag(tagValue: string) {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        var tagJson = JSON.stringify({value: tagValue});\n        const response = await fetch(Endpoints.Base + Endpoints.Responses + \"/\" + props.responseId + Endpoints.ResponsesTags, {\n            method: \"DELETE\",\n            body: tagJson,\n            headers: new Headers({\n                \"Authorization\": authToken,\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error creating tag\");\n            return;\n        }\n        getTags();\n    }\n\n    async function addTag(tagValue: string) {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        var tagJson = JSON.stringify({value: tagValue});\n        const response = await fetch(Endpoints.Base + Endpoints.Responses + \"/\" + props.responseId + Endpoints.ResponsesTags, {\n            method: \"POST\",\n            body: tagJson,\n            headers: new Headers({\n                \"Authorization\": authToken,\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error creating tag\");\n            return;\n        }\n        getTags();\n    }\n\n    const resolveResponse = async(id: string, isResolved: boolean) => {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        var patchActive = JSON.stringify({active: !isResolved});\n        const response = await fetch(Endpoints.Base + Endpoints.Responses + \"/\" + id, {\n            method: \"PATCH\",\n            body: patchActive,\n            headers: new Headers({\n                \"Authorization\": authToken\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error marking form response as resolved\");\n            return;\n        }\n    }\n\n    async function clickCheckbox() {\n        setIsResolved(isResolved => !isResolved);\n        resolveResponse(props.responseId, isResolved);\n    }\n\n    useEffect(() => {\n        getTags();\n    }, []);\n\n    return(\n        <div>\n            <button className=\"exit-button\" onClick={() => props.setSpecificView()}><img className=\"back-arrow\" src=\"./assets/icons/arrow.svg\"></img></button>\n            <Header title={props.title}></Header>\n            <SubHeaderLine title={props.subject}></SubHeaderLine>\n            <Tags addTag={addTag} removeTag={removeTag} values={tags}></Tags>\n            <div className=\"form-response-container\">\n                <div className=\"form-response\">\n                    <p className=\"form-response-body\">{props.body}</p>\n                    <textarea className=\"form-response-message\" value={messageResponse} onChange={e => setMessageResponse(e.target.value)}></textarea>\n                    <div className=\"resolved-send-container\">\n                        <label className=\"resolved-label\" >\n                            <input id=\"resolved-check-box\" className=\"resolved-check-box\" type=\"checkbox\" onClick={() => clickCheckbox()}></input>\n                            Resolved\n                        </label>\n                        <button className=\"send-btn\" placeholder=\"Message\" onClick={createMailto}>Send</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { Header } from '../Components/Header';\nimport { SubDashboard, SubDashboardData } from '../Components/SubDashboard';\nimport { FormResponseView } from './FormResponseView'; \nimport * as Endpoints from '../Constants/Endpoints';\n\nexport type ResponsesProps = {\n    header?: string;\n    subjectTitle?: string;\n    data: Array<SubDashboardData>;\n}\n\nexport function Responses(props: ResponsesProps) {\n    const headerTitle = props.header || \"Form Responses\";\n    const subjecTitle = props.subjectTitle || \"CURRENT RESPONSES\";\n    const [onResponseView, setResponseView] = useState(false);\n    const [responseData, setData] = useState<SubDashboardData[]>([]);\n    const [specificResponseData, setSpecificResponseData] = useState<SubDashboardData>();\n\n    const getResponses = async() => {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        const response = await fetch(Endpoints.Base + Endpoints.ResponsesActiveOnly, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": authToken\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const forms = await response.json();\n        var formResponses: Array<SubDashboardData> = [];\n        forms.forEach(function(formResponse: any) {\n            var d = new Date(formResponse.createdAt);\n            var t = d.toLocaleString(\"en-US\");\n            formResponses.push({id: formResponse.id, email: formResponse.emailAddress, name: formResponse.name + \" / \" + formResponse.subject, value: t, body: formResponse.body});\n        });\n        setData(formResponses);\n    }\n\n    useEffect(() => {\n        getResponses();\n    }, []);\n\n    function setSpecificResponseContent(formResponse: SubDashboardData) {\n        setResponseView(true);\n        setSpecificResponseData(formResponse);\n    }\n\n    function setSpecificView() {\n        setResponseView(false);\n        getResponses();\n    }\n    \n    return (\n        <div className=\"dashboard sub-dashboard\">\n            {onResponseView ? <FormResponseView responseId={specificResponseData?.id || \"\"} email={specificResponseData?.email || \"\"} title=\"Form Responses\" subject={specificResponseData?.name || \"\"} body={specificResponseData?.body || \"\"} setSpecificView={setSpecificView}></FormResponseView> :\n            <div>\n                <Header title={headerTitle}></Header>\n                <SubDashboard title={subjecTitle} data={props.data ? props.data : responseData} changeViewFunc={setSpecificResponseContent} emailTemplates={false} fullPageView={true} subHeaderValue={props.data ? props.data.length : responseData.length}></SubDashboard>\n            </div>}\n        </div>\n    );\n}","import { useEffect, useState } from 'react';\nimport { Header } from '../Components/Header';\nimport { SubDashboard, SubDashboardData } from '../Components/SubDashboard';\nimport { SubHeaderLine } from '../Components/SubHeaderLine';\nimport { StatCardRow } from '../Components/StatCardRow';\nimport { Responses } from './Responses';\nimport { useSelector } from 'react-redux';\nimport { AppState } from '../Redux/Reducers/rootReducer'\nimport * as Endpoints from '../Constants/Endpoints';\n\nexport function General() {\n    const { auth } = useSelector((state: AppState) => state.auth);\n    const [onSpecificView, setSpecificView] = useState(false);\n    const [specificViewTitle, setSpecificViewTitle] = useState(\"\");\n    const [specificSubjectData, setSpecificSubjectData] = useState<SubDashboardData[]>([]);\n    const [subjectsResponsesData, setSubjectsResponsesData] = useState<Map<string, SubDashboardData[]>>();\n    const [subjectsInquiries, setSubjectsInquiries] = useState<SubDashboardData[]>([]);\n    const [summaryToday, setSummaryToday] = useState(0);\n    const [summaryTotal, setSummaryTotal] = useState(0);\n    const [summaryTopics, setSummaryTopics] = useState(0);\n\n    const getResponses = async() => {\n        const response = await fetch(Endpoints.Base + Endpoints.ResponsesActiveGeneral, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": auth\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const responsesGeneral = await response.json();\n        var formResponses: SubDashboardData[] = [];\n        let subjectsMap = new Map<string, SubDashboardData[]>();\n        let subjectsInquiries = new Map<string, number>();\n\n        responsesGeneral.forEach(function(formResponse: any) {\n            var d = new Date(formResponse.createdAt);\n            var t = d.toLocaleString(\"en-US\");\n            var subjects = formResponse.tags;\n            var data: SubDashboardData = {id: formResponse.id, email: formResponse.emailAddress, name: formResponse.name + \" / \" + formResponse.subject, value: t, body: formResponse.body}\n\n            subjects.forEach((subject: any) => {\n                if (subjectsMap.has(subject.value)) {\n                    var getList = subjectsMap.get(subject.value);\n                    getList?.push(data);\n                    subjectsMap.set(subject.value, getList || []);\n                } else {\n                    var newList: SubDashboardData[] = [];\n                    newList.push(data);\n                    subjectsMap.set(subject.value, newList);\n                }\n\n                subjectsInquiries.set(subject.value, (subjectsInquiries.get(subject.value) || 0) + 1);\n\n            });\n            formResponses.push(data);\n        });\n\n        var inquiries: SubDashboardData[] = [];\n        Array.from(subjectsInquiries.keys()).forEach((key) => {\n            var subText = \" inquiry\";\n            if ((subjectsInquiries.get(key) || 0) > 1) {\n                subText = \" inquiries\";\n            }\n            inquiries.push({name: key, value: subjectsInquiries.get(key) + subText});\n        });\n\n        inquiries.sort((a, b) => (a.value > b.value) ? -1 : (a.value === b.value) ? -1 : 1);\n\n        setSummaryTopics(inquiries.length);\n        setSummaryTotal(formResponses.length);\n        setSubjectsInquiries(inquiries);\n        setSubjectsResponsesData(subjectsMap);\n    }\n\n    const getResponsesToday = async() => {\n        const response = await fetch(Endpoints.Base + Endpoints.Responses + \"?\" + Endpoints.ResponsesActiveGeneral + \"&\" + Endpoints.ResponsesTodayOnly, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": auth\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const responsesToday = await response.json();\n        setSummaryToday(responsesToday.length);\n    }\n\n    function specificView(data: SubDashboardData) {\n        setSpecificViewTitle(data.name);\n        setSpecificSubjectData(subjectsResponsesData?.get(data.name) || []);\n        setSpecificView(true);\n    }\n\n    function initialView() {\n        setSpecificView(false);\n    }\n    \n    useEffect(() => {\n        getResponses();\n        getResponsesToday();\n    }, []);\n\n\n    let statCards = [\n        {title: \"New Today\", stat: summaryToday},\n        {title: \"Total\", stat: summaryTotal},\n        {title: \"Topics\", stat: summaryTopics}\n    ];\n\n    return (\n        onSpecificView ? \n        <div> \n            <div className=\"dashboard sub-dashboard\">\n                <button className=\"exit-button\" onClick={initialView}><img className=\"back-arrow\" src=\"./assets/icons/arrow.svg\"></img></button>\n            </div>\n            <Responses header=\"General Inquiries\" subjectTitle={specificViewTitle} data={specificSubjectData}></Responses>\n        </div>\n        : <div className=\"dashboard sub-dashboard\">\n            <div>\n                <Header title=\"General Inquiries\"></Header>\n                <SubDashboard title=\"TOP SUBJECTS\" data={subjectsInquiries} changeViewFunc={specificView} emailTemplates={false} fullPageView={false}></SubDashboard>\n                <div className=\"sub-summary\">\n                    <SubHeaderLine title=\"SUMMARY\" subHeaderValue={\"Active Inquiries\"}></SubHeaderLine>\n                    <StatCardRow spaceEven={false} cards={statCards}></StatCardRow>\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { Header } from '../Components/Header';\nimport { SubDashboard, SubDashboardData } from '../Components/SubDashboard';\nimport { SubHeaderLine } from '../Components/SubHeaderLine';\nimport { StatCardRow } from '../Components/StatCardRow';\nimport { Responses } from './Responses';\nimport { useSelector } from 'react-redux';\nimport { AppState } from '../Redux/Reducers/rootReducer'\nimport * as Endpoints from '../Constants/Endpoints';\n\nexport function Casework() {\n    const { auth } = useSelector((state: AppState) => state.auth);\n    const [onSpecificView, setSpecificView] = useState(false);\n    const [specificViewTitle, setSpecificViewTitle] = useState(\"\");\n    const [specificTopicsData, setSpecificTopicsData] = useState<SubDashboardData[]>([]);\n    const [topicsResponsesData, setTopicsResponsesData] = useState<Map<string, SubDashboardData[]>>();\n    const [topicsCases, setTopicsCases] = useState<SubDashboardData[]>([]);\n    const [summaryToday, setSummaryToday] = useState(0);\n    const [summaryTotal, setSummaryTotal] = useState(0);\n    const [summaryTopics, setSummaryTopics] = useState(0);\n\n\n    const getResponses = async() => {\n        const response = await fetch(Endpoints.Base + Endpoints.ResponsesActiveCasework, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": auth\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const responsesGeneral = await response.json();\n        var formResponses: SubDashboardData[] = [];\n        let topicsMap = new Map<string, SubDashboardData[]>();\n        let topicsCases = new Map<string, number>();\n\n        responsesGeneral.forEach(function(formResponse: any) {\n            var d = new Date(formResponse.createdAt);\n            var t = d.toLocaleString(\"en-US\");\n            var topics = formResponse.tags;\n            var data: SubDashboardData = {id: formResponse.id, email: formResponse.emailAddress, name: formResponse.name + \" / \" + formResponse.subject, value: t, body: formResponse.body}\n\n            topics.forEach((topic: any) => {\n                if (topicsMap.has(topic.value)) {\n                    var getList = topicsMap.get(topic.value);\n                    getList?.push(data);\n                    topicsMap.set(topic.value, getList || []);\n                } else {\n                    var newList: SubDashboardData[] = [];\n                    newList.push(data);\n                    topicsMap.set(topic.value, newList);\n                }\n\n                topicsCases.set(topic.value, (topicsCases.get(topic.value) || 0) + 1);\n\n            });\n            formResponses.push(data);\n        });\n\n        var cases: SubDashboardData[] = [];\n        Array.from(topicsCases.keys()).forEach((key) => {\n            var subText = \" case\";\n            if ((topicsCases.get(key) || 0) > 1) {\n                subText = \" cases\";\n            }\n            cases.push({name: key, value: topicsCases.get(key) + subText});\n        })\n\n        cases.sort((a, b) => (a.value > b.value) ? -1 : (a.value === b.value) ? -1 : 1);\n\n        setSummaryTopics(cases.length);\n        setSummaryTotal(formResponses.length);\n        setTopicsCases(cases);\n        setTopicsResponsesData(topicsMap);\n    }\n\n    const getResponsesToday = async() => {\n        const response = await fetch(Endpoints.Base + Endpoints.Responses + \"?\" + Endpoints.ResponsesActiveCasework + \"&\" + Endpoints.ResponsesTodayOnly, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": auth\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const responsesToday = await response.json();\n        setSummaryToday(responsesToday.length);\n    }\n\n    function specificView(data: SubDashboardData) {\n        setSpecificViewTitle(data.name);\n        setSpecificTopicsData(topicsResponsesData?.get(data.name) || []);\n        setSpecificView(true);\n    }\n\n    function initialView() {\n        setSpecificView(false);\n    }\n    \n    useEffect(() => {\n        getResponses();\n        getResponsesToday();\n    }, []);\n\n    let statCards = [\n        {title: \"New Today\", stat: summaryToday},\n        {title: \"Total\", stat: summaryTotal},\n        {title: \"Topics\", stat: summaryTopics}\n    ];\n\n    return (\n        onSpecificView ? \n        <div> \n            <div className=\"dashboard sub-dashboard\">\n                <button className=\"exit-button\" onClick={initialView}><img className=\"back-arrow\" src=\"./assets/icons/arrow.svg\"></img></button>\n            </div>\n            <Responses header=\"Casework\" subjectTitle={specificViewTitle} data={specificTopicsData}></Responses>\n        </div>\n        : <div className=\"dashboard sub-dashboard\">\n            <div>\n                <Header title=\"Casework\"></Header>\n                <SubDashboard title=\"TOPIC\" data={topicsCases} changeViewFunc={specificView} emailTemplates={false} fullPageView={false}></SubDashboard>\n                <div className=\"sub-summary\">\n                    <SubHeaderLine title=\"SUMMARY\" subHeaderValue={\"Active Cases\"}></SubHeaderLine>\n                    <StatCardRow spaceEven={false} cards={statCards}></StatCardRow>\n                </div>\n            </div>\n        </div>\n    );\n}","import { useEffect, useState } from 'react';\nimport { Header } from '../Components/Header';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip } from 'recharts';\nimport * as Endpoints from '../Constants/Endpoints';\n\nexport type EngagementReportBarChartData = {\n    name: string;\n    count: number;\n}\n\nexport function EngagementReports() {\n  const [engagementChartData, setEngagementChartData] = useState<EngagementReportBarChartData[]>();\n\n    const getTags = async() => {\n      var authToken = localStorage.getItem(\"Authorization\") || \"\";\n      const response = await fetch(Endpoints.Base + Endpoints.Tags, {\n          method: \"GET\",\n          headers: new Headers({\n              \"Authorization\": authToken\n          })\n      });\n      if (response.status >= 300) {\n          console.log(\"Error retrieving form responses\");\n          return;\n      }\n      var topicCountsMap = new Map<string, number>();\n      const tags = await response.json();\n      tags.forEach((tag: any) => {\n        if (topicCountsMap.has(tag.value)) {\n          topicCountsMap.set(tag.value, (topicCountsMap.get(tag.value) || 0) + 1);\n        } else {\n          topicCountsMap.set(tag.value, 1);\n        }\n      });\n      \n      var engagementChartData: EngagementReportBarChartData[] = [];\n\n      Array.from(topicCountsMap.keys()).forEach((key) => {\n        engagementChartData.push({name: key, count: topicCountsMap.get(key) || 0});\n      });\n\n      engagementChartData.sort((a, b) => {\n        if (a.count > b.count) {\n            return -1;\n        } else if (a.count < b.count) {\n            return 1;\n        } else {\n            return 0;\n        }\n      });\n\n      setEngagementChartData(engagementChartData);\n    }\n\n    useEffect(() => {\n        getTags();\n    }, []);\n\n    return (\n        <div className=\"dashboard sub-dashboard\">\n            <Header title=\"Engagement Reports\"></Header>\n            <h2>Topics/Inquiries</h2>\n            <BarChart\n                width={700}\n                height={500}\n                data={engagementChartData}\n                margin={{\n                    top: 5,\n                    right: 30,\n                    left: 20,\n                    bottom: 5,\n                }}\n                >\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Bar dataKey=\"count\" fill=\"#855CF8\" />\n            </BarChart>\n        </div>\n    );\n}","export function Settings() {\n    return (\n        <div>\n        </div>\n    );\n}","import React, { useState } from 'react';\nimport './Login.css';\nimport * as Endpoints from '../Constants/Endpoints';\n\nexport type LoginProps = {\n    userLogin: Function;\n}\n\nexport function Login(props: LoginProps) {\n    const [onSignup, setOnSignup] = useState(false);\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    const attemptLogin = async(e: any) => {\n        e.preventDefault();\n        var login = {email: email, password: password};\n        var jsonLogin = JSON.stringify(login);\n        const response = await fetch(Endpoints.Base + \"/login\", {\n            method: \"POST\",\n            body: jsonLogin,\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        console.log(response);\n        if (response.status >= 300) {\n            alert(\"Invalid email or password\");\n            return;\n        }\n        const authToken = response.headers.get(\"Authorization\");\n        props.userLogin(authToken);\n    }\n\n    const attemptSignup = async(e: any) => {\n        e.preventDefault();\n        var newUser = {email: email, password: password, passwordConfirm: confirmPassword, firstName: firstName, lastName: lastName};\n        var jsonNewUser = JSON.stringify(newUser);\n        const response = await fetch(Endpoints.Base + \"/signup\", {\n            method: \"POST\",\n            body: jsonNewUser,\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            alert(\"Invalid email or password\");\n            return;\n        }\n        const authToken = response.headers.get(\"Authorization\");\n        props.userLogin(authToken);\n    }\n\n    function switchLoginSignup(isSignupView: boolean) {\n        setFirstName(\"\");\n        setLastName(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n        setOnSignup(isSignupView);\n    }\n\n    return(\n        <div className=\"login-page\">\n            <div className=\"login-container\">\n                <img src=\"./assets/icons/logo.png\"></img>\n                <h1 className=\"login-title\">Civic QA</h1>\n                {onSignup ? <div><form className=\"login-form\" autoComplete=\"off\" onSubmit={attemptSignup}>\n                    <input className=\"login-form-input login-form-text\" name=\"fname\" type=\"text\" value={firstName} placeholder=\"First Name\" onChange={e => setFirstName(e.target.value)} required/>\n                    <input className=\"login-form-input login-form-text\" name=\"lname\" type=\"text\" value={lastName} placeholder=\"Last Name\" onChange={e => setLastName(e.target.value)} required/>\n                    <input className=\"login-form-input login-form-text\" name=\"email\" type=\"text\" value={email} placeholder=\"Email\" onChange={e => setEmail(e.target.value)} required />\n                    <input className=\"login-form-input login-form-text\" name=\"password\" type=\"password\" value={password} placeholder=\"Password\" onChange={e => setPassword(e.target.value)} required/>\n                    <input className=\"login-form-input login-form-text\" name=\"confirm-password\" type=\"password\" value={confirmPassword} placeholder=\"Confirm Password\" onChange={e => setConfirmPassword(e.target.value)} required/>\n                    <input className=\"login-form-input login-btn\" type=\"submit\" value=\"Sign up\" />\n                    </form>\n                    <button className=\"switch-login-signup-btn\" onClick={() => switchLoginSignup(false)}>Already have an account? Login</button>\n                </div> : \n                <div>\n                    <form className=\"login-form\" autoComplete=\"off\" onSubmit={attemptLogin}>\n                        <input className=\"login-form-input login-form-text\" name=\"email\" type=\"text\" value={email} placeholder=\"Email\" onChange={e => setEmail(e.target.value)} required/>\n                        <input className=\"login-form-input login-form-text\" name=\"password\" type=\"password\" value={password} placeholder=\"Password\" onChange={e => setPassword(e.target.value)} required/>\n                        <input className=\"login-form-input login-btn\" type=\"submit\" value=\"Login\" />\n                    </form>\n                    <button className=\"switch-login-signup-btn\" onClick={() => switchLoginSignup(true)}>New? Create Account</button>\n                </div>}\n            </div>\n        </div>\n    );\n}","import './App.css';\nimport { useEffect, Dispatch} from \"react\";\nimport { Route, NavLink, Redirect, useLocation } from \"react-router-dom\";\nimport { ProfileHeader } from \"./Profile/ProfileHeader\";\nimport { Dashboard } from './Views/Dashboard';\nimport { General } from './Views/General';\nimport { Casework } from './Views/Casework';\nimport { Responses } from './Views/Responses';\nimport { EngagementReports } from './Views/EngagementReports';\nimport { Settings } from './Views/Settings';\nimport { Login } from './Views/Login';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AppState } from './Redux/Reducers/rootReducer'\nimport { PathActions } from './Redux/Actions/pathActions';\nimport { AuthActions } from './Redux/Actions/authActions';\nimport * as Constants from './Constants/Constants';\nimport * as Endpoints from './Constants/Endpoints';\n\nexport default function App() {\n  const location = useLocation();\n  const { auth } = useSelector((state: AppState) => state.auth);\n  const { path } = useSelector((state: AppState) => state.path);\n  const authDispatch = useDispatch<Dispatch<AuthActions>>();\n  const pathDispatch = useDispatch<Dispatch<PathActions>>();\n\n  const handleSetAuth = (auth: string) => {\n    authDispatch({type: 'SET_AUTH', payload: auth})\n  }\n\n  const handleSetPath = (path: string) => {\n    pathDispatch({type: 'SET_PATH', payload: path})\n  }\n\n  useEffect(() => {\n    handleSetPath(location.pathname);\n  }, [location]);\n\n  const userLogout = async(e: any) => {\n    e.preventDefault();\n    const response = await fetch(Endpoints.Base + \"/logout\", {\n      method: \"POST\",\n      headers: new Headers({\n          \"Authorization\": auth\n      })\n    });\n    if (response.status >= 300) {\n      console.log(\"Failed to logout\");\n    }\n    // localStorage.removeItem(\"Authorization\");\n    handleSetAuth('');\n  }\n\n  function userLogin(authToken: string) {\n    localStorage.setItem(\"Authorization\", authToken);\n    handleSetAuth(authToken);\n  }\n\n  return (\n      <div className=\"App\">\n        <Route path=\"/login\" component={() => <Login userLogin={userLogin}/>}></Route>\n        {auth ? <Redirect to=\"/dashboard\"/> : <Redirect to=\"/login\"/>}\n        {auth ?\n          <div>\n            <div>\n              <div className=\"profile-header\">\n                <ProfileHeader></ProfileHeader>\n              </div>\n              <nav className=\"nav-bar\">\n                <h1 className=\"title\">{Constants.Title}</h1>\n                <ul>\n                  <li>{path == \"/dashboard\" ? <img className=\"icon\" src=\"./assets/icons/pie-chart-active.svg\"/> : <img className=\"icon\" src=\"./assets/icons/pie-chart.svg\"/>}<NavLink className=\"nav-link\" activeClassName=\"active-link\" to=\"/dashboard\">{Constants.Dashboard}</NavLink></li>\n                  <li className=\"dashboard-sub-li\"><NavLink className=\"nav-link\" activeClassName=\"active-link\" to=\"/general\">{Constants.GeneralInquiries}</NavLink></li>\n                  <li className=\"dashboard-sub-li\"><NavLink className=\"nav-link\" activeClassName=\"active-link\" to=\"/casework\">{Constants.Casework}</NavLink></li>\n                  <li>{path ==\"/responses\" ? <img className=\"icon\" src=\"./assets/icons/inbox-active.svg\"/> : <img className=\"icon\" src=\"./assets/icons/inbox.svg\"/>}<NavLink className=\"nav-link\" activeClassName=\"active-link\" to=\"/responses\">{Constants.Responses}</NavLink></li>\n                  <li>{path ==\"/engagement-reports\" ? <img className=\"icon\" src=\"./assets/icons/stats-active.svg\"/> :<img className=\"icon\" src=\"./assets/icons/stats.svg\"/>}<NavLink className=\"nav-link\" activeClassName=\"active-link\" to=\"/engagement-reports\">{Constants.EngagementReports}</NavLink></li>\n                </ul>\n                <div className=\"compose-email-btn-container\">\n                  <hr className=\"solid\"/>\n                </div>\n                <ul>\n                <li>{path ==\"/settings\" ? <img className=\"icon\" src=\"./assets/icons/settings-active.svg\"/> : <img className=\"icon\" src=\"./assets/icons/settings.svg\"/>}<NavLink className=\"nav-link\" activeClassName=\"active-link\" to=\"/settings\">{Constants.Settings}</NavLink></li>\n                  <li><img className=\"icon\" src=\"./assets/icons/logout.svg\"/><button className=\"logout-btn\" onClick={userLogout}>{Constants.Logout}</button></li>\n                </ul>\n              </nav>\n            </div>\n            <Route path=\"/dashboard\" component={Dashboard}></Route>\n            <Route path=\"/general\" component={General}></Route>\n            <Route path=\"/casework\" component={Casework}></Route>\n            <Route path=\"/responses\" component={Responses}/>\n            <Route path=\"/engagement-reports\" component={EngagementReports}/>\n            <Route path=\"/settings\" component={Settings}/>\n          </div> : null}\n        </div>\n  );\n}\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from 'react-redux'\nimport store from './Redux/Store/store'\nimport App from './App';\nimport './index.css';\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n    <Router basename=\"civic-qa\">\n        <Provider store={store}>\n            <App />   \n        </Provider>\n    </Router>, \n    rootElement\n);\n"],"sourceRoot":""}