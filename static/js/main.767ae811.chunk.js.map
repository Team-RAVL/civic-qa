{"version":3,"sources":["Redux/Reducers/authReducer.ts","Redux/Reducers/pathReducer.ts","Redux/Reducers/rootReducer.ts","Redux/Store/store.ts","Profile/ProfileHeader.tsx","Constants/Constants.ts","Components/Navigation.tsx","Components/StatCard.tsx","Components/StatCardRow.tsx","Components/DropdownMenu.tsx","Dashboard/DashboardChart.tsx","Constants/Endpoints.ts","Dashboard/DashboardChartStats.tsx","Views/Dashboard.tsx","Components/Header.tsx","Components/SubDashboardCard.tsx","Components/SubHeaderLine.tsx","Components/SubDashboard.tsx","Components/Tag.tsx","Components/Tags.tsx","Views/FormInquiryView.tsx","Views/Inquiries.tsx","Views/General.tsx","Views/Casework.tsx","Components/FormCard.tsx","Views/Forms.tsx","Views/EngagementReports.tsx","Views/Settings.tsx","Components/TeamCard.tsx","Views/Landing.tsx","Constants/LandingPage.ts","Views/Signup.tsx","Views/Login.tsx","App.tsx","index.tsx"],"names":["initialState","auth","localStorage","getItem","authReducer","state","action","type","payload","path","pathReducer","rootReducer","combineReducers","store","createStore","ProfileHeader","className","height","width","cx","cy","r","stroke","stroke-width","fill","Inquiries","Purple","Navigation","props","location","useLocation","useSelector","pathDispatch","useDispatch","useEffect","handleSetPath","pathname","src","activeClassName","to","Constants","onClick","userLogout","StatCard","title","stat","StatCardRow","statCards","cards","forEach","card","push","spaceEven","DropdownMenu","useState","showMenu","toggleMenu","chartView","view","setChartView","DashboardChart","style","ResponsiveContainer","AreaChart","data","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","dataKey","YAxis","CartesianGrid","vertical","Tooltip","Area","fillOpacity","Base","Responses","ResponsesTodayOnly","ResponsesActiveGeneral","ResponsesActiveCasework","ResponsesTags","Mailto","DashboardChartStats","total","setTotal","today","setToday","todayTrends","setTodayTrends","a","authToken","fetch","Endpoints","method","headers","Headers","inquiries","status","console","log","json","inquiryTotal","length","responseToday","inquiriesToday","trendData","Map","inquiry","hour","Date","createdAt","getHours","has","set","get","trendDataArray","i","index","responses","getTotal","getTodayTrends","Dashboard","general","setGeneral","casework","setCasework","getGeneralInquiries","response","inquiriesGeneral","getCaseworkInquiries","inquiriesCasework","Header","SubDashboardCard","name","changeViewFunc","value","SubHeaderLine","subHeaderValue","SubDashboard","d","undefined","fullPageView","Tag","remove","Tags","wrapperRef","useRef","inputText","setInputText","inputShow","setInputShow","enterNewTag","e","preventDefault","addTag","handleClickOutside","current","contains","target","document","addEventListener","removeEventListener","tagList","values","removeTag","onSubmit","ref","placeholder","onChange","FormInquiryView","isResolved","setIsResolved","tags","setTags","messageResponse","setMessageResponse","mailtoRequest","email","subject","body","jsonMailtoRequest","JSON","stringify","text","mailtoString","window","href","getTags","responseId","tag","tagValue","tagJson","resolveResponse","patchActive","active","hideBackArrow","setSpecificView","clickCheckbox","headerTitle","header","subjecTitle","subjectTitle","hideInquiryBackArrow","onInquiryView","setInquiryView","responseData","setData","specificInquiryData","setSpecificInquiryData","getInquiries","forms","formInquiries","t","toLocaleString","emailAddress","formResponse","General","onInquiriesView","setInquiriesView","specificViewTitle","setSpecificViewTitle","specificTopicData","setSpecificTopicData","topicsData","setTopicsData","topicsInquiries","setTopicsInquiries","summaryToday","setSummaryToday","summaryTotal","setSummaryTotal","summaryTopics","setSummaryTopics","subjectsMap","subjectsInquiries","subjects","getList","newList","Array","from","keys","key","subText","sort","b","getInquiriesToday","Casework","specificTopicsData","setSpecificTopicsData","topicsCases","setTopicsCases","topicsMap","topics","topic","cases","FormCard","getForm","Forms","formData","setFormData","newFormName","setNewFormName","getForms","alert","formResponses","form","getFormLink","iframeString","navigator","clipboard","writeText","createForm","newForm","jsonNewForm","formCards","autoComplete","required","EngagementReports","engagementChartData","setEngagementChartData","topicCountsMap","count","slice","BarChart","margin","top","right","left","bottom","Bar","Settings","TeamCard","img","bio","Landing","Signup","firstName","setFirstName","lastName","setLastName","setEmail","password","setPassword","confirmPassword","setConfirmPassword","attemptSignup","newUser","passwordConfirm","jsonNewUser","userLogin","Login","attemptLogin","login","jsonLogin","App","setAuth","removeItem","setItem","exact","component","rootElement","getElementById","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.767ae811.chunk.js","sourcesContent":["import { AuthActions } from \"../Actions/authActions\";\n\ntype AuthState = {\n    auth: string;\n}\n\nconst initialState: AuthState = {\n    auth: localStorage.getItem(\"Authorization\") || '',\n}\nconst authReducer = (state: AuthState = initialState, action: AuthActions) => {\n    switch(action.type) {\n        case 'SET_AUTH':\n            return {\n                ...state,\n                auth: action.payload,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","import { PathActions } from \"../Actions/pathActions\";\n\ntype PathState = {\n    path: string;\n}\n\nconst initialState: PathState = {\n    path: '/dashboard',\n}\nconst pathReducer = (state: PathState = initialState, action: PathActions) => {\n    switch(action.type) {\n        case 'SET_PATH':\n            return {\n                ...state,\n                path: action.payload,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default pathReducer;","import { combineReducers } from 'redux'\nimport authReducer from './authReducer';\nimport pathReducer from './pathReducer';\n\nconst rootReducer = combineReducers({\n    path: pathReducer,\n    auth: authReducer,\n})\n\nexport type AppState = ReturnType<typeof rootReducer>\nexport default rootReducer;","import { createStore } from 'redux'\nimport rootReducer from '../Reducers/rootReducer'\n\nconst store = createStore(rootReducer);\nexport default store;","import React from 'react';\nimport './ProfileHeader.css';\n\nexport function ProfileHeader() {\n    return (\n        <div className=\"profile-heading\">\n            <p className=\"profile-name\">Profile Name</p>\n            <svg height=\"100\" width=\"100\">\n                <circle cx=\"25\" cy=\"25\" r=\"24\" stroke=\"#DFE0EB\" stroke-width=\"1\" fill=\"white\" />\n            </svg>\n        </div>\n    );\n}","// navigation panel\nexport const Title = \"Civic QA\";\nexport const Dashboard = \"Dashboard\";\nexport const General = \"General Topics\";\nexport const Casework = \"Casework Topics\";\nexport const Forms = \"Your Forms\";\nexport const EngagementReports = \"Engagement Reports\";\nexport const Settings = \"Settings\";\nexport const AboutUs = \"About Us\";\nexport const Logout = \"Logout\";\n\n// stat cards\nexport const ActiveGeneral = \"Active General Inquiries\";\nexport const ActiveCasework = \"Active Casework\";\n\n// chart\nexport const ChartTitle = \"Today's trends\";\n\n// chart dropdown menu options\nexport const Inquiries = \"Form Inquiries\";\nexport const Responses = \"Responses\";\nexport const Topics = \"Topics\";\n\n// chart stat cards\nexport const Total = \"Total\";\nexport const Today = \"Today\";\n\n// colors\nexport const Purple = \"#9B51E0\";","import { useEffect, Dispatch } from \"react\";\nimport { NavLink, Redirect, useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AppState } from '../Redux/Reducers/rootReducer'\nimport { PathActions } from '../Redux/Actions/pathActions';\nimport { ProfileHeader } from \"../Profile/ProfileHeader\";\nimport * as Constants from '../Constants/Constants';\n\nexport type NavigationProps = {\n    userLogout: Function;\n}\n\nexport function Navigation(props: NavigationProps) {\n    const location = useLocation();\n    const { path } = useSelector((state: AppState) => state.path);\n    const pathDispatch = useDispatch<Dispatch<PathActions>>();\n  \n    const handleSetPath = (path: string) => {\n      pathDispatch({type: 'SET_PATH', payload: path})\n    }\n  \n    useEffect(() => {\n      handleSetPath(location.pathname);\n    }, [location]);\n\n    function clickLogout() {\n        props.userLogout();\n        <Redirect to=\"welcome\"/>\n    }\n\n    return(\n        <div>\n            <div className=\"profile-header\">\n                <ProfileHeader></ProfileHeader>\n            </div>\n            <nav className=\"nav-bar\">\n                <h1 className=\"title\">{Constants.Title}</h1>\n                <ul>\n                    <li>{path == \"/dashboard\" ? <img className=\"icon\" src=\"./assets/icons/pie-chart-active.svg\"/> : <img className=\"icon\" src=\"./assets/icons/pie-chart.svg\"/>}<NavLink className=\"nav-link\" activeClassName=\"active-link\" to=\"/dashboard\">{Constants.Dashboard}</NavLink></li>\n                    <li className=\"dashboard-sub-li\"><NavLink className=\"nav-link\" activeClassName=\"active-link\" to=\"/general\">{Constants.General}</NavLink></li>\n                    <li className=\"dashboard-sub-li\"><NavLink className=\"nav-link\" activeClassName=\"active-link\" to=\"/casework\">{Constants.Casework}</NavLink></li>\n                    <li>{path == \"/inquiries\" ? <img className=\"icon\" src=\"./assets/icons/inbox-active.svg\"/> : <img className=\"icon\" src=\"./assets/icons/inbox.svg\"/>}<NavLink className=\"nav-link\" activeClassName=\"active-link\" to=\"/inquiries\">{Constants.Inquiries}</NavLink></li>\n                    <li>{path == \"/forms\" ? <img className=\"icon\" src=\"./assets/icons/inbox-active.svg\"/> : <img className=\"icon\" src=\"./assets/icons/inbox.svg\"/>}<NavLink className=\"nav-link\" activeClassName=\"active-link\" to=\"/forms\">{Constants.Forms}</NavLink></li>\n                    <li>{path ==\"/engagement-reports\" ? <img className=\"icon\" src=\"./assets/icons/stats-active.svg\"/> :<img className=\"icon\" src=\"./assets/icons/stats.svg\"/>}<NavLink className=\"nav-link\" activeClassName=\"active-link\" to=\"/engagement-reports\">{Constants.EngagementReports}</NavLink></li>\n                </ul>\n                <div className=\"compose-email-btn-container\">\n                    <hr className=\"solid\"/>\n                </div>\n                <ul>\n                    <li>{path ==\"/settings\" ? <img className=\"icon\" src=\"./assets/icons/settings-active.svg\"/> : <img className=\"icon\" src=\"./assets/icons/settings.svg\"/>}<NavLink className=\"nav-link\" activeClassName=\"active-link\" to=\"/settings\">{Constants.Settings}</NavLink></li>\n                    <li><img className=\"icon\" src=\"./assets/icons/logout.svg\"/><button className=\"logout-btn\" onClick={clickLogout}>{Constants.Logout}</button></li>\n                </ul>\n            </nav>\n      </div>\n    );\n}","import './StatCard.css';\n\nexport type StatCardProps = {\n    title: string;\n    stat: number;\n};\n\nexport function StatCard(props: StatCardProps) {\n    return (\n        <div className=\"stat-card\">\n            <h1 className=\"stat-card-title\">{props.title}</h1>\n            <p className=\"stat-card-data\">{props.stat}</p>\n        </div>\n    );\n}","import { StatCard, StatCardProps } from './StatCard';\nimport './StatCardRow.css';\n\nexport type StatCardRowProps = {\n    cards: Array<StatCardProps>;\n    spaceEven: boolean;\n}\n\nexport function StatCardRow(props: StatCardRowProps) {\n    let statCards:any[] = [];\n    props.cards.forEach(card => statCards.push(<StatCard title={card.title} stat={card.stat}></StatCard>));\n\n    return(\n        props.spaceEven ? <div className=\"stat-cards-even\">\n            {statCards}\n        </div> :\n        <div className=\"stat-cards-between\">\n            {statCards}\n        </div>\n    );\n}","import { useState, Dispatch, SetStateAction } from 'react';\nimport * as Constants from '../Constants/Constants';\nimport './DropdownMenu.css';\n\nexport type DropdownMenuProps = {\n    chartView: string;\n    setChartView: Dispatch<SetStateAction<string>>;\n};\n\n// TODO: add topics\n// <button onClick={() => SetChartViewAndToggleMenu(Constants.Topics)} className=\"dropdown-menu-btn\"><p className=\"dropdown-menu-btn-text\">{Constants.Topics}</p></button>\n\nexport function DropdownMenu(props: DropdownMenuProps) {\n    // dropdown menu state\n    const [showMenu, toggleMenu] = useState(false);\n\n    // set chart view and auto close menu\n    function SetChartViewAndToggleMenu(view: string) {\n        props.setChartView(view);\n        toggleMenu(showMenu => !showMenu);\n    }\n\n    return (\n        <div>\n            <button className=\"dropdown-menu-btn\" onClick={() => toggleMenu(showMenu => !showMenu)}>\n                <p className=\"dropdown-menu-btn-text\">{props.chartView}</p>\n                {showMenu ? <img className=\"dropdown-menu-arrow rotate-arrow\" src=\"./assets/icons/down-arrow.svg\" /> : <img className=\"dropdown-menu-arrow\" src=\"./assets/icons/down-arrow.svg\" />}\n            </button>\n            {showMenu ? \n                <div className=\"menu\">\n                    <button onClick={() => SetChartViewAndToggleMenu(Constants.Inquiries)} className=\"dropdown-menu-btn\"><p className=\"dropdown-menu-btn-text\">{Constants.Topics}</p></button>\n                </div> : <div />}\n        </div>\n    );\n}","import React from 'react';\nimport { AreaChart, Area, CartesianGrid, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\nimport * as Constants from '../Constants/Constants';\n\nexport type ChartData = {\n    index: number;\n    responses: number;\n}\n\nexport type DashboardChartProps = {\n    data: Array<ChartData>\n};\n\nexport function DashboardChart(props: DashboardChartProps) {\n    return (\n        <div style={{ width: '60%', height: 400 }}>\n            <ResponsiveContainer>\n                <AreaChart data={props.data}>\n                    <defs>\n                        <linearGradient id=\"purpleGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"0%\" stopColor={Constants.Purple} stopOpacity={0.5}/>\n                            <stop offset=\"100%\" stopColor={Constants.Purple} stopOpacity={0}/>\n                        </linearGradient>\n                    </defs>\n                    <XAxis dataKey=\"index\" />\n                    <YAxis />\n                    <CartesianGrid stroke=\"#eee\" vertical={false} />\n                    <Tooltip />\n                    <Area type=\"monotone\" dataKey=\"responses\" stroke={Constants.Purple} fillOpacity={1} fill=\"url(#purpleGradient)\" />\n                </AreaChart>\n            </ResponsiveContainer>\n\n        </div>\n    );\n}","export const Base = \"https://api.civicqa.codes/v0\";\nexport const Signup = \"/signup\";\nexport const Responses = \"/responses\";\nexport const ResponsesActiveOnly = \"/responses?activeOnly=true\";\nexport const ResponsesTodayOnly = \"/responses?todayOnly=true\";\nexport const ResponsesActiveGeneral = \"/responses?activeOnly=true&inquiryType=general\";\nexport const ResponsesActiveGeneralTodayOnly = \"/responses?activeOnly=true&inquiryType=general&todayOnly=true\";\nexport const ResponsesActiveCasework = \"/responses?activeOnly=true&inquiryType=casework\";\nexport const ResponsesActiveCaseworkTodayOnly = \"/responses?activeOnly=true&inquiryType=casework&todayOnly=true\";\nexport const ResponsesTags = \"/tags\";\nexport const Mailto = \"/mailto\";\nexport const Tags = \"/tags\";","import React, { useEffect, useState } from 'react';\nimport { DropdownMenu } from '../Components/DropdownMenu';\nimport { ChartData, DashboardChart } from '../Dashboard/DashboardChart';\nimport { StatCard } from '../Components/StatCard';\nimport * as Constants from '../Constants/Constants';\nimport * as Endpoints from '../Constants/Endpoints';\n\nexport function DashboardChartStats() {\n    const [total, setTotal] = useState(0);\n    const [today, setToday] = useState(0);\n    const [todayTrends, setTodayTrends] = useState<ChartData[]>([]);\n    const [chartView, setChartView] = useState(Constants.Inquiries);\n\n    async function getTotal() {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        const inquiries = await fetch(Endpoints.Base + Endpoints.Responses, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": authToken\n            })\n        });\n        if (inquiries.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const inquiryTotal = await inquiries.json();\n        setTotal(inquiryTotal.length);\n    }\n\n    async function getTodayTrends() {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        const responseToday= await fetch(Endpoints.Base + Endpoints.ResponsesTodayOnly, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": authToken\n            })\n        });\n        if (responseToday.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const inquiriesToday = await responseToday.json();\n        // map hour and form response counts\n        var trendData = new Map<number, number>();\n        inquiriesToday.forEach(function(inquiry: any) {\n            var date = new Date(inquiry.createdAt);\n            var hour = date.getHours();\n            if (trendData.has(hour)) {\n                trendData.set(hour, (trendData.get(hour) || 0) + 1);\n            } else {\n                trendData.set(hour, 1);\n            }\n        });\n        // convert map to array for recharts line chart\n        var trendDataArray: Array<ChartData> = [];\n        for (var i = 0; i < 24; i++) {\n            trendDataArray.push({index: i, responses: trendData.get(i) || 0});\n        }\n        setTodayTrends(trendDataArray);\n        setToday(inquiriesToday.length);\n    }\n\n    useEffect(() => {\n        getTotal();\n        getTodayTrends();\n    }, []);\n\n    return(\n        <div className=\"trends\">\n            <div className=\"chart-heading\">\n                <h2 className=\"chart-title\">{Constants.ChartTitle}</h2>\n                <div className=\"dropdown-menu\">\n                    <DropdownMenu chartView={chartView} setChartView={setChartView}></DropdownMenu>\n                </div>\n            </div>\n            <div className=\"chart-stats\">\n                <DashboardChart data={todayTrends}></DashboardChart>\n                <div className=\"chart-stats-cards\">\n                    <StatCard title={Constants.Total} stat={total}></StatCard>\n                    <StatCard title={Constants.Today} stat={today}></StatCard>\n                </div>\n            </div>\n        </div>\n    );\n}","import { useEffect, useState } from 'react';\nimport { StatCardRow } from '../Components/StatCardRow';\nimport { DashboardChartStats } from '../Dashboard/DashboardChartStats';\nimport * as Constants from '../Constants/Constants';\nimport * as Endpoints from '../Constants/Endpoints';\nimport './Dashboard.css';\n\nexport function Dashboard() {\n    const auth = localStorage.getItem(\"Authorization\") || \"\";\n    const [general, setGeneral] = useState(0);\n    const [casework, setCasework] = useState(0);\n\n    const getGeneralInquiries = async() => {\n        const response = await fetch(Endpoints.Base + Endpoints.ResponsesActiveGeneral, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": auth\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const inquiriesGeneral = await response.json();\n        setGeneral(inquiriesGeneral.length);\n    }\n\n    const getCaseworkInquiries = async() => {\n        const response = await fetch(Endpoints.Base + Endpoints.ResponsesActiveCasework, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": auth\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const inquiriesCasework = await response.json();\n        setCasework(inquiriesCasework.length);\n    }\n    \n    useEffect(() => {\n        getGeneralInquiries();\n        getCaseworkInquiries();\n    }, []);\n\n    let statCards = [\n        {title: Constants.ActiveGeneral, stat: general},\n        {title: Constants.ActiveCasework, stat: casework}\n    ]\n\n    return (\n        <div className=\"dashboard\">\n            <StatCardRow spaceEven={true} cards={statCards}></StatCardRow>\n            <DashboardChartStats></DashboardChartStats>\n        </div>\n    );\n}","export type HeaderProps = {\n    title: string;\n}\n\nexport function Header(props: HeaderProps) {\n    return(\n        <div>\n            <h1 className=\"sub-dash-title\">{props.title}</h1>\n        </div>\n    );\n}","import { InquiryData } from '../Components/SubDashboard';\nimport './SubDashboardCard.css';\n\nexport type SubDashboardCardProps = {\n    data: InquiryData;\n    changeViewFunc: Function;\n}\n\nexport function SubDashboardCard(props: SubDashboardCardProps) {\n    return (\n        <div className=\"sub-dash-card\">\n            <p className=\"sub-dash-card-name\">{props.data.name}</p>\n            <button className=\"sub-dash-card-btn\" onClick={() => props.changeViewFunc(props.data)}>View</button>\n            <p className=\"sub-dash-card-value\">{props.data.value}</p>\n        </div>\n    );\n}","export type SubHeaderLineProps = {\n    title: string;\n    subHeaderValue?: any;\n}\n\nexport function SubHeaderLine(props: SubHeaderLineProps) {\n    return(\n        <div>\n            <div className=\"sub-dash-sub-header\">\n                <h2 className=\"sub-dash-sub-title\">{props.title}</h2>\n                {props.subHeaderValue ? <h1 className=\"sub-dash-sub-number\">{props.subHeaderValue}</h1> : null}\n                <hr className=\"sub-dash-line\" />\n            </div>\n        </div>\n    );\n}","import { SubDashboardCard } from './SubDashboardCard';\nimport { SubHeaderLine } from './SubHeaderLine';\nimport './SubDashboard.css';\n\nexport type InquiryData = {\n    id?: string;\n    email?: string;\n    name: string;\n    value: any;\n    body?: string;\n}\n\nexport type SubDashboardProps = {\n    title: string;\n    data: Array<InquiryData>;\n    changeViewFunc: Function;\n    fullPageView: boolean;\n    subHeaderValue?: any;\n};\n\nexport function SubDashboard(props: SubDashboardProps) {\n    let cards: any[] = [];\n    props.data.forEach(d => cards.push(<SubDashboardCard data={d} changeViewFunc={props.changeViewFunc}></SubDashboardCard>));\n\n    return (\n        <div>\n            <div>\n                <SubHeaderLine title={props.title} subHeaderValue={props.subHeaderValue ? props.subHeaderValue : undefined}></SubHeaderLine>\n                {props.fullPageView ? \n                <div className=\"sub-dash-cards-long\">\n                    {cards}\n                </div> :\n                <div className=\"sub-dash-cards-short\">\n                    {cards}\n                </div>\n                }\n\n            </div>\n        </div>\n    );\n}","import './Tag.css';\n\nexport type TagProps = {\n    value: string;\n    remove: Function;\n}\n\nexport function Tag(props: TagProps) {\n    return(\n        <div className=\"tag\">\n            <p className=\"tag-value\">{\"#\" + props.value}</p>\n            <button className=\"tag-remove-btn\" onClick={() => props.remove(props.value)}><img className=\"icon\" src=\"./assets/icons/remove.svg\"></img></button>\n        </div>\n    );\n}","import { useEffect, useRef, useState } from 'react';\nimport { Tag } from './Tag';\nimport './Tag.css';\n\nexport type TagProps = {\n    values: string[];\n    addTag: Function;\n    removeTag: Function;\n}\n\nexport function Tags(props: TagProps) {\n    const wrapperRef = useRef<HTMLInputElement>(null);\n    const [inputText, setInputText] = useState(\"\");\n    const [inputShow, setInputShow] = useState(false);\n\n    function addNewTag() {\n        if (inputText.length > 0) {\n            props.addTag(inputText);\n        }\n        setInputShow(false);\n        setInputText(\"\");\n    }\n\n    function enterNewTag(e: any) {\n        e.preventDefault();\n        addNewTag();\n    }  \n\n    function handleClickOutside(e: any) {\n        if (wrapperRef.current && !wrapperRef.current.contains(e.target)) {\n            setInputShow(false);\n        }\n    }\n\n    useEffect(() => {\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, []);\n\n    let tagList: any[] = [];\n    props.values.forEach(function(value) {\n        tagList.push(<Tag value={value} remove={props.removeTag}></Tag>)\n    });\n\n    return(\n        <div className=\"tags-container\">\n            {tagList}\n            {inputShow ? <div>\n                    <form onSubmit={e => enterNewTag(e)}>\n                        <input ref={wrapperRef} className=\"tag-add-input\" type=\"text\" placeholder={\"#\"} onChange={e => setInputText(e.target.value)}></input>\n                    </form>\n                </div>\n                : <button className=\"tag-add-btn\" onClick={() => setInputShow(true)}><img className=\"icon\" src=\"./assets/icons/plus.svg\"></img></button>}\n        </div>\n    );\n}","import { useEffect, useState } from 'react';\nimport { Header } from '../Components/Header';\nimport { SubHeaderLine } from '../Components/SubHeaderLine';\nimport { Tags } from '../Components/Tags';\nimport * as Endpoints from '../Constants/Endpoints';\nimport \"./FormInquiryView.css\";\n\nexport type FormResponseViewProps = {\n    responseId: string;\n    email: string;\n    title: string;\n    subject: string;\n    body: string;\n    setSpecificView: Function;\n    hideBackArrow: boolean;\n};\n\nexport function FormInquiryView(props: FormResponseViewProps) {\n    const [isResolved, setIsResolved] = useState(true);\n    const [tags, setTags] = useState<any[]>([]);\n    const [messageResponse, setMessageResponse] = useState(\"\");\n\n    async function createMailto() {\n        var mailtoRequest = {to: [props.email], subject: props.subject, body: messageResponse};\n        var jsonMailtoRequest = JSON.stringify(mailtoRequest);\n        const response = await fetch(Endpoints.Base + Endpoints.Mailto, {\n            method: \"POST\",\n            body: jsonMailtoRequest,\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error creating mailto\");\n            return;\n        }\n        const mailtoString = await response.text();\n        window.location.href = mailtoString;\n    }\n\n    const getTags = async() => {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        const response = await fetch(Endpoints.Base + Endpoints.Responses + \"/\" + props.responseId + Endpoints.ResponsesTags, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": authToken\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retreiving response tags\");\n            return;\n        }\n        const tags = await response.json();\n        var tagList: any[] = [];\n        tags.forEach((tag: any) => {\n            tagList.push(tag.value);\n        });\n        setTags(tagList);\n    }\n\n    async function removeTag(tagValue: string) {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        var tagJson = JSON.stringify({value: tagValue});\n        const response = await fetch(Endpoints.Base + Endpoints.Responses + \"/\" + props.responseId + Endpoints.ResponsesTags, {\n            method: \"DELETE\",\n            body: tagJson,\n            headers: new Headers({\n                \"Authorization\": authToken,\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error creating tag\");\n            return;\n        }\n        getTags();\n    }\n\n    async function addTag(tagValue: string) {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        var tagJson = JSON.stringify({value: tagValue});\n        const response = await fetch(Endpoints.Base + Endpoints.Responses + \"/\" + props.responseId + Endpoints.ResponsesTags, {\n            method: \"POST\",\n            body: tagJson,\n            headers: new Headers({\n                \"Authorization\": authToken,\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error creating tag\");\n            return;\n        }\n        getTags();\n    }\n\n    const resolveResponse = async(id: string, isResolved: boolean) => {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        var patchActive = JSON.stringify({active: !isResolved});\n        const response = await fetch(Endpoints.Base + Endpoints.Responses + \"/\" + id, {\n            method: \"PATCH\",\n            body: patchActive,\n            headers: new Headers({\n                \"Authorization\": authToken\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error marking form response as resolved\");\n            return;\n        }\n    }\n\n    async function clickCheckbox() {\n        setIsResolved(isResolved => !isResolved);\n        resolveResponse(props.responseId, isResolved);\n    }\n\n    useEffect(() => {\n        getTags();\n    }, []);\n\n    return(\n        <div>\n            {props.hideBackArrow ? null : <button className=\"exit-button\" onClick={() => props.setSpecificView()}><img className=\"back-arrow\" src=\"./assets/icons/arrow.svg\"></img></button>}\n            <Header title={props.title}></Header>\n            <SubHeaderLine title={props.subject}></SubHeaderLine>\n            <Tags addTag={addTag} removeTag={removeTag} values={tags}></Tags>\n            <div className=\"form-response-container\">\n                <div className=\"form-response\">\n                    <p className=\"form-response-body\">{props.body}</p>\n                    <textarea className=\"form-response-message\" value={messageResponse} onChange={e => setMessageResponse(e.target.value)}></textarea>\n                    <div className=\"resolved-send-container\">\n                        <label className=\"resolved-label\" >\n                            <input id=\"resolved-check-box\" className=\"resolved-check-box\" type=\"checkbox\" onClick={() => clickCheckbox()}></input>\n                            Resolved\n                        </label>\n                        <button className=\"send-btn\" placeholder=\"Message\" onClick={createMailto}>Send</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","import { useEffect, useState } from 'react';\nimport { Header } from '../Components/Header';\nimport { SubDashboard, InquiryData } from '../Components/SubDashboard';\nimport { FormInquiryView } from './FormInquiryView'; \nimport * as Endpoints from '../Constants/Endpoints';\n\nexport type ResponsesProps = {\n    header?: string;\n    subjectTitle?: string;\n    data: Array<InquiryData>;\n    hideInquiryBackArrow?: boolean;\n}\n\nexport function Inquiries(props: ResponsesProps) {\n    const headerTitle = props.header || \"Form Inquiries\";\n    const subjecTitle = props.subjectTitle || \"CURRENT INQUIRIES\";\n    const hideBackArrow = props.hideInquiryBackArrow || false;\n    const [onInquiryView, setInquiryView] = useState(false);\n    const [responseData, setData] = useState<InquiryData[]>([]);\n    const [specificInquiryData, setSpecificInquiryData] = useState<InquiryData>();\n\n    const getInquiries = async() => {\n        var authToken = localStorage.getItem(\"Authorization\") || \"\";\n        const response = await fetch(Endpoints.Base + Endpoints.ResponsesActiveOnly, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": authToken\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const forms = await response.json();\n        var formInquiries: Array<InquiryData> = [];\n        forms.forEach(function(inquiry: any) {\n            var d = new Date(inquiry.createdAt);\n            var t = d.toLocaleString(\"en-US\");\n            formInquiries.push({id: inquiry.id, email: inquiry.emailAddress, name: inquiry.name + \" / \" + inquiry.subject, value: t, body: inquiry.body});\n        });\n        setData(formInquiries);\n    }\n\n    useEffect(() => {\n        getInquiries();\n    }, []);\n\n    function setSpecificInquiryContent(formResponse: InquiryData) {\n        setInquiryView(true);\n        setSpecificInquiryData(formResponse);\n    }\n\n    function setSpecificView() {\n        setInquiryView(false);\n        getInquiries();\n    }\n    \n    return (\n        <div className=\"dashboard sub-dashboard\">\n            {onInquiryView ? \n            <FormInquiryView responseId={specificInquiryData?.id || \"\"} email={specificInquiryData?.email || \"\"} title=\"Inquiry\" subject={specificInquiryData?.name || \"\"} body={specificInquiryData?.body || \"\"} setSpecificView={setSpecificView} hideBackArrow={hideBackArrow}></FormInquiryView> :\n            <div>\n                <Header title={headerTitle}></Header>\n                <SubDashboard title={subjecTitle} data={props.data ? props.data : responseData} changeViewFunc={setSpecificInquiryContent} fullPageView={true} subHeaderValue={props.data ? props.data.length : responseData.length}></SubDashboard>\n            </div>}\n        </div>\n    );\n}","import { useEffect, useState } from 'react';\nimport { Header } from '../Components/Header';\nimport { SubDashboard, InquiryData } from '../Components/SubDashboard';\nimport { SubHeaderLine } from '../Components/SubHeaderLine';\nimport { StatCardRow } from '../Components/StatCardRow';\nimport { Inquiries } from './Inquiries';\nimport * as Endpoints from '../Constants/Endpoints';\n\nexport function General() {\n    const auth = localStorage.getItem(\"Authorization\") || \"\";\n    const [onInquiriesView, setInquiriesView] = useState(false);\n    const [specificViewTitle, setSpecificViewTitle] = useState(\"\");\n    const [specificTopicData, setSpecificTopicData] = useState<InquiryData[]>([]);\n    const [topicsData, setTopicsData] = useState<Map<string, InquiryData[]>>();\n    const [topicsInquiries, setTopicsInquiries] = useState<InquiryData[]>([]);\n    const [summaryToday, setSummaryToday] = useState(0);\n    const [summaryTotal, setSummaryTotal] = useState(0);\n    const [summaryTopics, setSummaryTopics] = useState(0);\n\n    const getInquiries = async() => {\n        const response = await fetch(Endpoints.Base + Endpoints.ResponsesActiveGeneral, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": auth\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const inquiriesGeneral = await response.json();\n        var formInquiries: InquiryData[] = [];\n        let subjectsMap = new Map<string, InquiryData[]>();\n        let subjectsInquiries = new Map<string, number>();\n\n        inquiriesGeneral.forEach(function(inquiry: any) {\n            var d = new Date(inquiry.createdAt);\n            var t = d.toLocaleString(\"en-US\");\n            var subjects = inquiry.tags;\n            var data: InquiryData = {id: inquiry.id, email: inquiry.emailAddress, name: inquiry.name + \" / \" + inquiry.subject, value: t, body: inquiry.body}\n\n            subjects.forEach((subject: any) => {\n                if (subjectsMap.has(subject.value)) {\n                    var getList = subjectsMap.get(subject.value);\n                    getList?.push(data);\n                    subjectsMap.set(subject.value, getList || []);\n                } else {\n                    var newList: InquiryData[] = [];\n                    newList.push(data);\n                    subjectsMap.set(subject.value, newList);\n                }\n\n                subjectsInquiries.set(subject.value, (subjectsInquiries.get(subject.value) || 0) + 1);\n\n            });\n            formInquiries.push(data);\n        });\n\n        var inquiries: InquiryData[] = [];\n        Array.from(subjectsInquiries.keys()).forEach((key) => {\n            var subText = \" inquiry\";\n            if ((subjectsInquiries.get(key) || 0) > 1) {\n                subText = \" inquiries\";\n            }\n            inquiries.push({name: key, value: subjectsInquiries.get(key) + subText});\n        });\n\n        inquiries.sort((a, b) => (a.value > b.value) ? -1 : (a.value === b.value) ? -1 : 1);\n\n        setSummaryTopics(inquiries.length);\n        setSummaryTotal(formInquiries.length);\n        setTopicsInquiries(inquiries);\n        setTopicsData(subjectsMap);\n    }\n\n    const getInquiriesToday = async() => {\n        const response = await fetch(Endpoints.Base +  Endpoints.ResponsesActiveGeneralTodayOnly, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": auth\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const inquiriesToday = await response.json();\n        setSummaryToday(inquiriesToday.length);\n    }\n\n    function inquiriesView(data: InquiryData) {\n        setSpecificViewTitle(data.name);\n        setSpecificTopicData(topicsData?.get(data.name) || []);\n        setInquiriesView(true);\n    }\n\n    function initialView() {\n        setInquiriesView(false);\n        getInquiries();\n    }\n    \n    useEffect(() => {\n        getInquiries();\n        getInquiriesToday();\n    }, []);\n\n\n    let statCards = [\n        {title: \"New Today\", stat: summaryToday},\n        {title: \"Total\", stat: summaryTotal},\n        {title: \"Topics\", stat: summaryTopics}\n    ];\n\n    return (\n        onInquiriesView ? \n        <div> \n            <div className=\"dashboard sub-dashboard\">\n                <button className=\"exit-button\" onClick={initialView}><img className=\"back-arrow\" src=\"./assets/icons/arrow.svg\"></img></button>\n            </div>\n            <Inquiries header=\"General\" subjectTitle={specificViewTitle} data={specificTopicData} hideInquiryBackArrow={true}></Inquiries>\n        </div>\n        : <div className=\"dashboard sub-dashboard\">\n            <div>\n                <Header title=\"General Topics\"></Header>\n                <SubDashboard title=\"TOPICS\" data={topicsInquiries} changeViewFunc={inquiriesView} fullPageView={false}></SubDashboard>\n                <div className=\"sub-summary\">\n                    <SubHeaderLine title=\"SUMMARY\" subHeaderValue={\"Active Inquiries\"}></SubHeaderLine>\n                    <StatCardRow spaceEven={false} cards={statCards}></StatCardRow>\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { Header } from '../Components/Header';\nimport { SubDashboard, InquiryData } from '../Components/SubDashboard';\nimport { SubHeaderLine } from '../Components/SubHeaderLine';\nimport { StatCardRow } from '../Components/StatCardRow';\nimport { Inquiries } from './Inquiries';\nimport * as Endpoints from '../Constants/Endpoints';\n\nexport function Casework() {\n    const auth = localStorage.getItem(\"Authorization\") || \"\";\n    const [onInquiriesView, setInquiriesView] = useState(false);\n    const [specificViewTitle, setSpecificViewTitle] = useState(\"\");\n    const [specificTopicsData, setSpecificTopicsData] = useState<InquiryData[]>([]);\n    const [topicsData, setTopicsData] = useState<Map<string, InquiryData[]>>();\n    const [topicsCases, setTopicsCases] = useState<InquiryData[]>([]);\n    const [summaryToday, setSummaryToday] = useState(0);\n    const [summaryTotal, setSummaryTotal] = useState(0);\n    const [summaryTopics, setSummaryTopics] = useState(0);\n\n\n    const getInquiries = async() => {\n        const response = await fetch(Endpoints.Base + Endpoints.ResponsesActiveCasework, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": auth\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const inquiriesCasework = await response.json();\n        var inquiries: InquiryData[] = [];\n        let topicsMap = new Map<string, InquiryData[]>();\n        let topicsCases = new Map<string, number>();\n\n        inquiriesCasework.forEach(function(inquiry: any) {\n            var d = new Date(inquiry.createdAt);\n            var t = d.toLocaleString(\"en-US\");\n            var topics = inquiry.tags;\n            var data: InquiryData = {id: inquiry.id, email: inquiry.emailAddress, name: inquiry.name + \" / \" + inquiry.subject, value: t, body: inquiry.body}\n\n            topics.forEach((topic: any) => {\n                if (topicsMap.has(topic.value)) {\n                    var getList = topicsMap.get(topic.value);\n                    getList?.push(data);\n                    topicsMap.set(topic.value, getList || []);\n                } else {\n                    var newList: InquiryData[] = [];\n                    newList.push(data);\n                    topicsMap.set(topic.value, newList);\n                }\n\n                topicsCases.set(topic.value, (topicsCases.get(topic.value) || 0) + 1);\n\n            });\n            inquiries.push(data);\n        });\n\n        var cases: InquiryData[] = [];\n        Array.from(topicsCases.keys()).forEach((key) => {\n            var subText = \" case\";\n            if ((topicsCases.get(key) || 0) > 1) {\n                subText = \" cases\";\n            }\n            cases.push({name: key, value: topicsCases.get(key) + subText});\n        })\n\n        cases.sort((a, b) => (a.value > b.value) ? -1 : (a.value === b.value) ? -1 : 1);\n\n        setSummaryTopics(cases.length);\n        setSummaryTotal(inquiries.length);\n        setTopicsCases(cases);\n        setTopicsData(topicsMap);\n    }\n\n    const getInquiriesToday = async() => {\n        const response = await fetch(Endpoints.Base + Endpoints.ResponsesActiveCaseworkTodayOnly, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": auth\n            })\n        });\n        if (response.status >= 300) {\n            console.log(\"Error retrieving form responses\");\n            return;\n        }\n        const inquiriesToday = await response.json();\n        setSummaryToday(inquiriesToday.length);\n    }\n\n    function inquiriesView(data: InquiryData) {\n        setSpecificViewTitle(data.name);\n        setSpecificTopicsData(topicsData?.get(data.name) || []);\n        setInquiriesView(true);\n    }\n\n    function initialView() {\n        setInquiriesView(false);\n        getInquiries();\n    }\n    \n    useEffect(() => {\n        getInquiries();\n        getInquiriesToday();\n    }, []);\n\n    let statCards = [\n        {title: \"New Today\", stat: summaryToday},\n        {title: \"Total\", stat: summaryTotal},\n        {title: \"Topics\", stat: summaryTopics}\n    ];\n\n    return (\n        onInquiriesView ? \n            <div> \n                <div className=\"dashboard sub-dashboard\">\n                    <button className=\"exit-button\" onClick={initialView}><img className=\"back-arrow\" src=\"./assets/icons/arrow.svg\"></img></button>\n                </div>\n                <Inquiries header=\"Casework\" subjectTitle={specificViewTitle} data={specificTopicsData} hideInquiryBackArrow={true}></Inquiries>\n            </div>\n            : <div className=\"dashboard sub-dashboard\">\n                <div>\n                    <Header title=\"Casework Topics\"></Header>\n                    <SubDashboard title=\"TOPICS\" data={topicsCases} changeViewFunc={inquiriesView} fullPageView={false}></SubDashboard>\n                    <div className=\"sub-summary\">\n                        <SubHeaderLine title=\"SUMMARY\" subHeaderValue={\"Active Cases\"}></SubHeaderLine>\n                        <StatCardRow spaceEven={false} cards={statCards}></StatCardRow>\n                    </div>\n                </div>\n            </div>\n    );\n}","import './FormCard.css';\n\nexport type FormCardProps = {\n    id: string;\n    name: string;\n    getForm: Function;\n}\n\nexport function FormCard(props: FormCardProps) {\n\n    return(\n        <div className=\"form-card\">\n            <h1 className=\"form-card-name\">{props.name}</h1>\n            <button className=\"form-card-btn\" onClick={() => props.getForm(props.id)}>Copy iFrame embed link</button>\n        </div>\n    );\n}","import { useEffect, useState } from 'react';\nimport { Header } from '../Components/Header';\nimport { FormCard } from '../Components/FormCard';\nimport './Forms.css';\nimport * as Endpoints from '../Constants/Endpoints';\n\nexport type FormData = {\n    id: string;\n    name: string;\n}\n\nexport function Forms() {\n    const [formData, setFormData] = useState<FormData[]>([]);\n    const [newFormName, setNewFormName] = useState(\"\");\n\n    const getForms = async() => {\n        const authToken = localStorage.getItem(\"Authorization\") || \"\";\n        const response = await fetch(Endpoints.Base + \"/forms\", {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": authToken\n            })\n        });\n        if (response.status >= 300) {\n            alert(\"There was an error trying to get your forms.\");\n            return;\n        }\n        const formResponses = await response.json();\n        var forms: FormData[] = [];\n        formResponses.forEach(function(form: any) {\n            var id = form.id;\n            var name = form.name;\n            forms.push({id, name});\n        });\n        setFormData(forms);\n    }\n\n    function getFormLink(id: string) {\n        var iframeString: string =  \"<iframe src=\\\"\" + Endpoints.Base + \"/form/\" + id + \"\\\"></iframe>\";\n        navigator.clipboard.writeText(iframeString);\n    }\n\n    const createForm = async(e: any) => {\n        e.preventDefault();\n        const authToken = localStorage.getItem(\"Authorization\") || \"\";\n        var newForm = {name: newFormName};\n        var jsonNewForm = JSON.stringify(newForm);\n        const response = await fetch(Endpoints.Base + \"/forms\", {\n            method: \"POST\",\n            body: jsonNewForm,\n            headers: new Headers({\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": authToken\n            })\n        });\n        if (response.status >= 300) {\n            alert(\"There was an error trying to get your forms.\");\n            return;\n        }\n        setNewFormName(\"\");\n        getForms();\n    }\n        \n    useEffect(() => {\n        getForms();\n    }, []);\n\n    var formCards: any[] = [];\n    formData.forEach(form => formCards.push(<FormCard id={form.id} name={form.name} getForm={getFormLink}></FormCard>));\n\n    return(\n        <div className=\"dashboard subdashboard\">\n            <Header title=\"Your Forms\"></Header>\n            <div className=\"form-cards\">\n                {formCards}\n            </div>\n            <hr className=\"forms-create-divider\"/>\n            <div className=\"new-form-container\">\n                <h1>Create a form</h1>\n                <form className=\"new-form\" autoComplete=\"off\" onSubmit={createForm}>\n                    <input className=\"new-form-input\" name=\"name\" type=\"text\" value={newFormName} placeholder=\"Form Name\" onChange={e => setNewFormName(e.target.value)} required/>\n                    <input className=\"new-form-create-btn\" type=\"submit\" value=\"Create\" />\n                </form>\n            </div>\n        </div>\n    );\n}","import { useEffect, useState } from 'react';\nimport { Header } from '../Components/Header';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\nimport * as Endpoints from '../Constants/Endpoints';\n\nexport type EngagementReportBarChartData = {\n    name: string;\n    count: number;\n}\n\nexport function EngagementReports() {\n  const [engagementChartData, setEngagementChartData] = useState<EngagementReportBarChartData[]>();\n\n    const getTags = async() => {\n      var authToken = localStorage.getItem(\"Authorization\") || \"\";\n      const response = await fetch(Endpoints.Base + Endpoints.Tags, {\n          method: \"GET\",\n          headers: new Headers({\n              \"Authorization\": authToken\n          })\n      });\n      if (response.status >= 300) {\n          console.log(\"Error retrieving form responses\");\n          return;\n      }\n      var topicCountsMap = new Map<string, number>();\n      const tags = await response.json();\n      tags.forEach((tag: any) => {\n        if (topicCountsMap.has(tag.value)) {\n          topicCountsMap.set(tag.value, (topicCountsMap.get(tag.value) || 0) + 1);\n        } else {\n          topicCountsMap.set(tag.value, 1);\n        }\n      });\n      \n      var engagementChartData: EngagementReportBarChartData[] = [];\n\n      Array.from(topicCountsMap.keys()).forEach((key) => {\n        engagementChartData.push({name: key, count: topicCountsMap.get(key) || 0});\n      });\n\n      engagementChartData.sort((a, b) => {\n        if (a.count > b.count) {\n            return -1;\n        } else if (a.count < b.count) {\n            return 1;\n        } else {\n            return 0;\n        }\n      });\n\n      engagementChartData = engagementChartData.slice(0, 5);\n      setEngagementChartData(engagementChartData);\n    }\n\n    useEffect(() => {\n        getTags();\n    }, []);\n\n    return (\n        <div className=\"dashboard sub-dashboard view\">\n            <Header title=\"Engagement Reports\"></Header>\n            <h2>Most Frequent Topics</h2>\n            <div style={{ width: '100%', height: 500 }}>\n              <ResponsiveContainer>\n                <BarChart\n                    data={engagementChartData}\n                    margin={{\n                        top: 5,\n                        right: 30,\n                        left: 20,\n                        bottom: 5,\n                    }}\n                    >\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Bar dataKey=\"count\" fill=\"#855CF8\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n        </div>\n    );\n}","export function Settings() {\n    return (\n        <div>\n        </div>\n    );\n}","import './TeamCard.css';\n\nexport type TeamCardProps = {\n    name: string,\n    img: string,\n    bio: string\n}\n\nexport function TeamCard(props: TeamCardProps) {\n    return(\n        <div className=\"team-bio\">\n            <div className=\"team-name-picture\">\n                <h2>{props.name}</h2>\n                <img className=\"teammate-img\" src={props.img}></img>\n            </div>\n            <p className=\"bio\">{props.bio}</p>\n        </div>\n    );\n}","import { NavLink } from \"react-router-dom\";\nimport { TeamCard } from '../Components/TeamCard';\nimport * as  LandingPage from '../Constants/LandingPage';\nimport './Landing.css';\n\nexport function Landing() {\n    return(\n        <div className=\"landing-page\">\n            <div className=\"landing-page-bar\">\n                <div className=\"landing-logo-title-container\">\n                    <img className=\"landing-logo\" src=\"./assets/icons/logo.png\"></img>\n                    <h1 className=\"landing-title\">Civic QA</h1>\n                </div>\n                <div className=\"landing-btn-container\">\n                    <NavLink className=\"landing-btn\" to=\"/signup\">Signup</NavLink>\n                    <NavLink className=\"landing-btn\" to=\"login\">Login</NavLink>\n                </div>\n            </div>\n            <div className=\"project-container\">\n                <div className=\"landing-sub-section project-overview\">\n                    <h1 className=\"landing-sub-title\">Problem Overview</h1>\n                    <p>{LandingPage.ProblemOverview1}</p>\n                    <p>{LandingPage.ProblemOverview2}</p>\n                    <p>{LandingPage.ProblemOverview3}</p>\n                </div>\n                <div className=\"landing-sub-section stakeholders\">\n                    <h1 className=\"landing-sub-title\">Legislative Assistants</h1>\n                    <p>{LandingPage.TargetStakeholders1}</p>\n                    <p>{LandingPage.TargetStakeholders2}</p>\n                </div>\n                <div className=\"landing-sub-section project-solution\">\n                    <h1 className=\"landing-sub-title\">How does Civic QA help?</h1>\n                    <p>{LandingPage.Solution1}</p>\n                    <ol className=\"process-steps\">\n                        <li>Research</li>\n                        <li>Concept Validation</li>\n                        <li>Prototyping</li>\n                        <li>User Testing</li>\n                        <li>Feedback Implementation</li>\n                    </ol>\n                    <p>{LandingPage.Solution2}</p>\n                    <p>{LandingPage.Solution3}</p>\n                </div>\n                <div className=\"landing-sub-section presentation-video\">\n                    <h1 className=\"landing-sub-title\">Presentation Video</h1>\n                    <iframe height=\"500\" width=\"800\" src=\"https://www.youtube.com/embed/COTimhg6Cs8\"></iframe>\n                </div>\n                <div className=\"landing-sub-section about-team\">\n                    <h1 className=\"landing-sub-title\">Meet the Team</h1>\n                    <div className=\"team-bios\">   \n                        <TeamCard name=\"Lia Kitahata\" img=\"./assets/images/lia.jpg\" bio={LandingPage.LiaBio}></TeamCard>\n                        <TeamCard name=\"Rafi Bayer\" img=\"./assets/images/rafi.jpg\" bio={LandingPage.RafiBio}></TeamCard>\n                        <TeamCard name=\"Amit Galitzky\" img=\"./assets/images/amit.jpg\" bio={LandingPage.AmitBio}></TeamCard>\n                        <TeamCard name=\"Vivian Hua\" img=\"./assets/images/vivian.jpg\" bio={LandingPage.VivianBio}></TeamCard>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","export const ProblemOverview1 = \"Legislative Assistants and those in similar positions handle an overwhelming volume of constituent inquiries daily, making it challenging to respond to all constituents and still find time for their other daily duties. How might LAs better communicate with constituents and handle responses to improve transparency and increase engagement?\";\nexport const ProblemOverview2 = \"Some Legislative Assistants receive 100s of inquiries daily about various topics, ranging from House Bills to questions about citizenship. Due to this high volume of messages, LAs often do not get the chance to respond to all their constituents, creating a lack of engagement between the people and their representatives.\";\nexport const ProblemOverview3 = \"Existing platforms and technologies for LAs to filter and respond to their inquiries do not supply the necessary functionality to effectively and efficiently organize and display incoming messages. As such, our team wanted to create a new solution that caters directly to the specific needs of LAs and helps them to categorize messages while improving response times. With more efficiency on the LAs’ side, more constituents receive responses and more time can be allocated to helping constituents in other ways.\";\n\nexport const TargetStakeholders1 = \"Legislative Assistants and the representatives they work with are the target stakeholders for this project, with the LAs themselves as the primary users. Although this is a very niche group of users, we believe that their challenges with handling constituent responses is a problem space that is often overlooked. \";\nexport const TargetStakeholders2 = \"If this project is adopted by another team in the future, we hope that it can be expanded and tailored to several different types of users and occupations. Many of the functions and features of Civic QA are specific to LAs but could also serve useful for many others, including teachers, organizers, CEOs, etc. \";\n\nexport const Solution1 = \"Beginning with extensive market and user research, we honed in on what Legislative Assistants need the most when it comes to a solution like ours, and how we can best create a platform that responds to those needs. Our process can be broken down into a few main steps:\";\nexport const Solution2 = \"We aim to make LAs’ jobs easier by removing some of the tediousness of their current system and making it so they can respond to constituents faster, while also gaining a better understanding of their engagement levels. By supplying engagement reports, daily trends, and filtered topics, LAs can see what constituents care about most and to what extent those in their jurisdiction are interacting with their representatives.\";\nexport const Solution3 = \"With improved responsiveness and greater overall efficiency, LAs will be able to communicate with constituents more effectively, likely encouraging more people to engage, as LAs will be more reliable and likely to respond.\"\n\nexport const LiaBio = \"Lia is graduating with the Informatics HCI track and a Spanish Minor. Her passion lies in the intersection of art, technology, and contributing to the “social good”. She plans on working in UX/UI Design, focusing on making the future of tech more accessible and accommodating for all. In her free time you can find her jamming to Taylor Swift or practicing film photography.\";\nexport const RafiBio = \"Rafi is graduating with a degree in Informatics, following a custom track. After graduation, Rafi will be joining Microsoft as a software engineer, working with the Azure Networking team. Rafi is also interested in teaching and technical education, and hopes to use his skills to reduce the barriers to entry in the field of software. Outside of work and school, he enjoys BJJ, running, and travel. \";\nexport const AmitBio = \"Amit is graduating with a double degree in Informatics and Biology (Molecular & Cellular). He will be starting work as a full-time software engineer at Amazon this summer. He is enthusiastic about building software that can improve people's daily life. During his free time Amit loves to either play or watch soccer, specifically his favorite team Chelsea FC.\";\nexport const VivianBio = \"Vivian is graduating with a degree in Informatics and will be working as a software engineer at Microsoft. She is passionate about women of color in tech and leadership roles. Vivian loves playing games, reading, and learning Chinese in her free time.\";","import { useState } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport * as Endpoints from '../Constants/Endpoints';\nimport './SignupLogin.css';\n\nexport type SignupProps = {\n    userLogin: Function;\n}\n\nexport function Signup(props: SignupProps) {\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    const attemptSignup = async(e: any) => {\n        e.preventDefault();\n        var newUser = {email: email, password: password, passwordConfirm: confirmPassword, firstName: firstName, lastName: lastName};\n        var jsonNewUser = JSON.stringify(newUser);\n        const response = await fetch(Endpoints.Base + \"/signup\", {\n            method: \"POST\",\n            body: jsonNewUser,\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 400) {\n            alert(\"Invalid email or password\");\n            return;\n        }\n        const authToken = response.headers.get(\"Authorization\");\n        props.userLogin(authToken);\n    }\n\n    function switchView() {\n        setFirstName(\"\");\n        setLastName(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n    }\n\n    return(\n        <div className=\"signup-login-page\">\n            <div className=\"signup-login-container\">\n                <img className=\"signup-login-logo\" src=\"./assets/icons/logo.png\"></img>\n                <h1 className=\"signup-login-title\">Civic QA</h1>\n                <form className=\"signup-login-form\" autoComplete=\"off\" onSubmit={attemptSignup}>\n                    <input className=\"signup-login-form-input signup-login-form-text\" name=\"fname\" type=\"text\" value={firstName} placeholder=\"First Name\" onChange={e => setFirstName(e.target.value)} required/>\n                    <input className=\"signup-login-form-input signup-login-form-text\" name=\"lname\" type=\"text\" value={lastName} placeholder=\"Last Name\" onChange={e => setLastName(e.target.value)} required/>\n                    <input className=\"signup-login-form-input signup-login-form-text\" name=\"email\" type=\"text\" value={email} placeholder=\"Email\" onChange={e => setEmail(e.target.value)} required />\n                    <input className=\"signup-login-form-input signup-login-form-text\" name=\"password\" type=\"password\" value={password} placeholder=\"Password\" onChange={e => setPassword(e.target.value)} required/>\n                    <input className=\"signup-login-form-input signup-login-form-text\" name=\"confirm-password\" type=\"password\" value={confirmPassword} placeholder=\"Confirm Password\" onChange={e => setConfirmPassword(e.target.value)} required/>\n                    <input className=\"signup-login-form-input signup-login-btn\" type=\"submit\" value=\"Sign up\" />\n                </form>\n                <NavLink to=\"login\" className=\"switch-signup-login-btn\" onClick={switchView}>Already have an account? Login</NavLink>\n            </div>\n        </div>\n    );\n}","import { useState } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport * as Endpoints from '../Constants/Endpoints';\nimport './SignupLogin.css';\n\nexport type LoginProps = {\n    userLogin: Function;\n}\n\nexport function Login(props: LoginProps) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const attemptLogin = async(e: any) => {\n        e.preventDefault();\n        var login = {email: email, password: password};\n        var jsonLogin = JSON.stringify(login);\n        const response = await fetch(Endpoints.Base + \"/login\", {\n            method: \"POST\",\n            body: jsonLogin,\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        console.log(response);\n        if (response.status >= 400) {\n            alert(\"Invalid email or password\");\n            return;\n        }\n        const authToken = response.headers.get(\"Authorization\");\n        props.userLogin(authToken);\n    }\n\n    function switchView() {\n        setEmail(\"\");\n        setPassword(\"\");\n    }\n\n    return(\n        <div className=\"signup-login-page\">\n            <div className=\"signup-login-container\">\n                <img className=\"signup-login-logo\" src=\"./assets/icons/logo.png\"></img>\n                <h1 className=\"signup-login-title\">Civic QA</h1>\n                <form className=\"signup-login-form\" autoComplete=\"off\" onSubmit={attemptLogin}>\n                    <input className=\"signup-login-form-input signup-login-form-text\" name=\"email\" type=\"text\" value={email} placeholder=\"Email\" onChange={e => setEmail(e.target.value)} required/>\n                    <input className=\"signup-login-form-input signup-login-form-text\" name=\"password\" type=\"password\" value={password} placeholder=\"Password\" onChange={e => setPassword(e.target.value)} required/>\n                    <input className=\"signup-login-form-input signup-login-btn\" type=\"submit\" value=\"Login\" />\n                </form>\n                <NavLink to=\"/signup\" className=\"switch-signup-login-btn\" onClick={switchView}>New? Create Account</NavLink>\n            </div>\n        </div>\n    );\n}","import './App.css';\nimport { useState} from \"react\";\n\nimport { Route, Redirect } from \"react-router-dom\";\nimport { Navigation } from './Components/Navigation';\nimport { Dashboard } from './Views/Dashboard';\nimport { General } from './Views/General';\nimport { Casework } from './Views/Casework';\nimport {Inquiries } from './Views/Inquiries';\nimport { Forms } from './Views/Forms';\nimport { EngagementReports } from './Views/EngagementReports';\nimport { Settings } from './Views/Settings';\nimport { Landing } from './Views/Landing';\nimport { Signup } from './Views/Signup';\nimport { Login } from './Views/Login'\nimport * as Endpoints from './Constants/Endpoints';\n\nexport default function App() {\n  const authToken = localStorage.getItem(\"Authorization\");\n  const [auth, setAuth] = useState(authToken || \"\");\n\n  async function userLogout() {\n    const response = await fetch(Endpoints.Base + \"/logout\", {\n      method: \"POST\",\n      headers: new Headers({\n          \"Authorization\": auth\n      })\n    });\n    if (response.status >= 400) {\n      console.log(\"Failed to logout\");\n    }\n    localStorage.removeItem(\"Authorization\");\n    setAuth(\"\");\n  }\n\n  function userLogin(authToken: string) {\n    localStorage.setItem(\"Authorization\", authToken);\n    setAuth(authToken);\n    console.log(auth);\n  }\n\n  return (\n      <div className=\"App\">\n        <Route exact path=\"/\" component={Landing}></Route>\n        <Route exact path=\"/signup\" component={() => <Signup userLogin={userLogin}/>}></Route>\n        <Route exact path=\"/login\" component={() => <Login userLogin={userLogin}/>}></Route>\n        {auth ? <Redirect to=\"/dashboard\"/> : <Redirect to=\"/\"/>}\n        {auth ?\n          <div>\n            <Navigation userLogout={userLogout}></Navigation>\n            <div className=\"view\">\n              <Route exact path=\"/dashboard\" component={Dashboard}/>\n              <Route exact path=\"/general\" component={General}/>\n              <Route exact path=\"/casework\" component={Casework}/>\n              <Route exact path=\"/inquiries\" component={Inquiries}/>\n              <Route exact path=\"/forms\" component={Forms}/>\n              <Route exact path=\"/engagement-reports\" component={EngagementReports}/>\n              <Route exact path=\"/settings\" component={Settings}/>\n            </div>\n          </div> : null}\n        </div>\n  );\n}\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux'\nimport store from './Redux/Store/store'\nimport App from './App';\nimport './index.css';\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n    <HashRouter basename=\"\">\n        <Provider store={store}>\n            <App />   \n        </Provider>\n    </HashRouter>, \n    rootElement\n);\n"],"sourceRoot":""}