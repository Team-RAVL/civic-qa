openapi: '3.0.2'
info:
  title: Gateway API
  version: 0.0.0
paths:
  # =================================  account  =================================
  /signup:
    post:
      summary: Create a new account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'account/api-v0.yml#/components/schemas/newUserRequest'
      responses:
        '201':
          description: Created
          headers:
            Authorization:
              schema:
                type: string
                format: bearerAuth

  /login:
    post:
      summary: Create a new account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'account/api-v0.yml#/components/schemas/loginRequest'
      responses:
        '200':
          description: Logged in
          headers:
            Authorization:
              schema:
                type: string
                format: bearerAuth
              description: Auth Token

  /logout:
    post:
      summary: logout
      security:
        - bearerAuth: []
      responses:
        '200':
          description: logged out
  
  /getsession:
    get:
      summary: get auth user sessionState
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auth user sessionState
          content:
            application/json:
              schema:
                $ref: 'account/api-v0.yml#/components/schemas/sessionState'
  
  # =================================  form/management  =================================
  /forms:
    get:
      summary: Get all forms
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Array of users forms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "form/api-v0.yml#/components/schemas/form"
    post:
      summary: Create a new form
      security:
        - bearerAuth: []
      requestBody:
        required: true
        description: New Form
        content:
          application/json:
            schema:
              $ref: "form/api-v0.yml#/components/schemas/newFormRequest"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "form/api-v0.yml#/components/schemas/form"

  /forms/{formID}:
    get:
      summary: Get a specific form by ID
      parameters:
        - in: path
          name: formID
          schema:
            type: integer
          required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "form/api-v0.yml#/components/schemas/form"
  /responses:
    get:
      summary: get all responses to the auth users forms
      parameters:
        - in: query
          name: name
          description: formResponse name field
          schema:
            type: string
          required: false
        - in: query
          name: emailAddress
          description: formResponse emailAddress field
          schema:
            type: string
          required: false 
        - in: query
          name: subject
          description: subject to filter responses by
          schema:
            type: string
          required: false
        - in: query
          name: activeOnly
          description: filter out non-active responses
          schema:
            type: boolean
          required: false 
        - in: query
          name: formID
          description: filter to specific form
          schema:
            type: integer
          required: false 
      security:
        - bearerAuth: []
      responses:
        '200':
          description: form responses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "form/api-v0.yml#/components/schemas/formResponse"
      
  /responses/{responseID}:
    get:
      summary: get a specific responseID by id
      parameters:
        - in: path
          name: formID
          schema:
            type: integer
          required: true
      security:
        - bearerAuth: []
      responses:
        '200':
            description: form response
            content:
              application/json:
                schema:
                  $ref: "form/api-v0.yml#/components/schemas/formResponse"
    patch:
      summary: update a responses 'open' property by ID
      parameters:
        - in: path
          name: formID
          schema:
            type: integer
          required: true
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "form/api-v0.yml#/components/schemas/patchResponse"
      responses:
        '200':
          description: Update successful
  /responses/{responseID}/tags:
    get:
      summary: get all tags for a given response
      parameters:
        - in: path
          name: responseID
          schema:
            type: integer
          required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: all tags from the given response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "form/api-v0.yml#/components/schemas/tag"
    post:
      summary: add a tag to a response
      parameters:
        - in: path
          name: responseID
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "form/api-v0.yml#/components/schemas/tagRequest"
      security:
        - bearerAuth: []
      responses:
        '201':
          description: created
    delete:
      summary: add a tag to a response
      parameters:
        - in: path
          name: responseID
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "form/api-v0.yml#/components/schemas/tagRequest"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: deleted
  /tags:
    get:
      summary: get all tags for all responses
      security:
        - bearerAuth: []
      responses:
        '200':
          description: all tags from all responses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "form/api-v0.yml#/components/schemas/tag"
      
  # =================================  form/user  =================================
  /form/{formID}:
    get:
      summary: get a forms HTML by ID
      parameters:
        - in: path
          name: formID
          schema:
            type: integer
          required: true 
      responses:
        '200':
          description: form HTML for iFrame embedding
          content:
            text/html:
              schema:
                type: string
                format: html
    post:
      summary: response to a HTML form byID
      parameters:
        - in: path
          name: formID
          schema:
            type: integer
          required: true 
      requestBody:
        required: true
        content:
          # don't ask, idk, just means a form
          application/x-www-Form-urlencoded: 
            schema:
              $ref: "form/api-v0.yml#/components/schemas/formResponseURLEncodedForm"
      responses:
        '200':
          description: Form recieved
          content:
            text/plain:
              schema:
                type: string
  # =================================  mailto  =================================
  /mailto:
    post:
      summary: generate a mailto HTML anchor tag
      requestBody:
        content:
          application/json:
            schema:
              $ref: "mailto/api-v0/yml#/components/schemas/request"
      responses:
        '200':
          description: Bytes of HTML, anchor tag with mailto href
          content:
            text/html:
              examples: 
                simple: 
                  value: <a href="mailto:email@example.com">click me!</a>
                  summary: A mailto anchor tag containing 1 to and some inner text
                complex:
                  value: <a href="mailto:test@example.com?cc=ccme@example.com&bcc=thebcc@example.com&subject=important%20subject&body=the%20body">click here!</a>
                  summary: A more complex mailto tag containing 1 to, a cc, a bcc, a subject and a body


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    user:
      type: object
      properties:
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        createdOn:
          type: string
          format: date-time

    


  